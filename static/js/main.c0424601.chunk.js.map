{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/session.js","redux/reducers/plots.js","redux/reducers/active.js","redux/reducers/loading.js","redux/reducers/persist.js","redux/reducers/index.js","redux/store/index.js","redux/actions/index.js","components/settings/inputFields/TextInput.tsx","components/prompts/Prompt.js","apis/PythonApi.js","utils/hotkeys.js","components/plots/PlotCard.js","components/settings/inputFields/Files.tsx","components/controls/Controls.js","components/controls/NavigateButton.js","components/structures/Tag.tsx","components/structures/pickerContext.tsx","components/structures/StructurePicker.tsx","components/plots/PlotDashboard.js","components/settings/inputFields/Dropdown.tsx","components/plotInitializer/PlotTypePicker.tsx","components/plotInitializer/TabPicker.tsx","components/plotInitializer/StructureRow.tsx","components/plotInitializer/MergeMethodPicker.tsx","components/plotInitializer/StructuresGroup.tsx","components/plotInitializer/PlotableRow.tsx","components/plotInitializer/PlotInitializer.tsx","components/settings/inputFields/Switch.tsx","components/settings/inputFields/ColorPicker.tsx","components/settings/inputFields/RangeSlider.tsx","components/settings/inputFields/Range.tsx","components/settings/inputFields/Numeric.tsx","components/settings/inputFields/Array.tsx","components/settings/inputFields/List.tsx","components/settings/InputField.tsx","components/settings/inputFields/CreatableDropown.tsx","components/settings/inputFields/DictInput.tsx","components/settings/inputFields/CreatableDict.tsx","components/settings/SettingsContainer.tsx","pages/PlotTweaking.tsx","components/pythonMethods/Method.tsx","components/pythonMethods/Methods.tsx","pages/PlotMethods.tsx","pages/PlotEditor.js","components/tabs/Tab.tsx","components/tabs/Tabs.js","pages/Plots.js","pages/SislDocs.js","components/loading/NotConnected.js","pages/Session.tsx","components/controls/ConnectionStatus.js","pages/MainPage.js","pages/Syncronizer.js","App.tsx","serviceWorker.js","index.js"],"names":["ADD_PLOTS","REMOVE_PLOT","SET_ACTIVE_PLOT","SET_ACTIVE_TAB","SET_SESSION","CLEAR_SESSION","START_LOADING_PLOT","END_LOADING_PLOT","SET_ACTIVE_PAGE","defaultState","session","newState","state","action","type","console","warn","Object","keys","plotables","length","plots","log","newPlots","_","omit","plotID","plot","undefined","tab","structs","page","active","activeTab","activeTabInSession","find","tabs","anyTab","id","pageName","loading","from","Date","persist","key","whitelist","reducer","persistReducer","storage","combineReducers","browser","createResponsiveStateReducer","small","medium","selectActivePlot","getStoreAndPersistor","store","createStore","rootReducer","responsiveStoreEnhancer","persistor","persistStore","addPlots","tabsIDs","setSessionTabs","setActivePlot","setActiveTab","setActivePage","Text","props","value","TextField","variant","onChange","e","target","label","style","width","inputField","params","Prompt","controlClose","closeToast","this","callback","paddingBottom","content","TextInput","setState","inputProps","Button","onClick","Component","prompt","toast","autoClose","closeOnClick","onClose","arg","connect","address","apiAddress","externalListeners","socket","io","listeners","forEach","listener","on","connectionTimeOut","setTimeout","currentAddress","newAddress","trim","connected","disconnect","close","onConnect","args","push","onDisconnect","setupListeners","clearTimeout","requestSession","reason","askForAuth","err","handleError","document","dispatchEvent","CustomEvent","detail","info","error","authenticating","toastPrompt","username","emit","path","loadSession","loadSessionFromFile","file","name","getSessionFile","once","sessionfile","newProcessId","uuidv4","_sessionMethod","methodName","kwargs","callSessionShortcut","sequence","updateSessionSettings","newSettings","undoSessionSettings","addTab","tabName","removeTab","tabID","updateTab","newParams","setTabLayouts","layouts","saveSession","getPlot","plot_id","newPlot","newPlotKwargs","removePlot","movePlot","mergePlots","plotIDs","to","_plotMethod","showPlotFullScreen","updatePlotSettings","settings","undoPlotSettings","updatePlotLayout","layoutUpdates","updateFigure","layout","data","frames","overwrite","callPlotShortcut","dispatchPlotEvent","event","savePlot","plotFile","user","api","GLOBAL_HOT_KEYS","SHOW_AVAIL_HOTKEYS","GO_TO_SETTINGS","GO_TO_DASHBOARD","GO_TO_MOLECULEVIEWER","SAVE_SESSION","sequences","LOAD_SESSION","TABS_HOT_KEYS","global","MOVE_TO_NEXT_TAB","MOVE_TO_PREVIOUS_TAB","NEW_TAB","TRY","PLOT_CARD_HOT_KEYS","GO_TO_PLOT_SETTINGSEDITING","GO_TO_PLOT_LAYOUTEDITING","GO_TO_PLOT_METHODS","FULL_SCREEN","UNDO_PLOT_SETTINGS","PlotCard","hotKeys","querySelectorAll","hotKeysHandlers","goToPlotLayoutEditing","goToPlotSettingsEditing","goToPlotMethods","undoSettings","shortcuts","PythonApi","handlePlotClick","points","handlePlotRelayout","includes","setPlotAsActive","togglePlotAsActive","isActivePlot","rootDir","isLoading","editable","addEventListener","cou","Math","random","Card","className","borderRadius","figure","backColor","paper_bgcolor","hotKeysKeyMap","TESTING","reduce","plotShortcuts","shortcut","replace","activeStyles","component","elevation","keyMap","handlers","allowChanges","height","display","flexDirection","overflow","background","paddingTop","flex","ref","plotlyRef","useResizeHandler","autosize","title","onRelayout","onUpdate","config","responsive","paddingLeft","paddingRight","marginBottom","Provider","size","margin","color","textAlign","IconButton","effect","place","disable","showTooltips","mapDispatchToProps","FilesInput","placeholder","onDrop","useCallback","files","useDropzone","getRootProps","getInputProps","useStyles","makeStyles","theme","root","transform","flexGrow","exampleWrapper","position","marginTop","spacing","radioGroup","speedDial","bottom","right","top","left","SpeedDials","classes","direction","React","useState","open","setOpen","hidden","SpeedDial","ariaLabel","icon","SpeedDialIcon","onOpen","actions","map","SpeedDialAction","tooltipTitle","tip","tooltipPlacement","href","Controls","hotKeysHandler","saveCurrentSession","syncWithSession","showPage","Control","tooltip","floating","ROUTES","hotKey","NavigateButton","route","PlotableTag","selected","toggle","plotable","fontSize","split","slice","StructureTag","structure","defaultPickerParams","searchString","alphabeticSorting","selectedSorting","searchByFolder","displayStructures","displayPlotables","PickerParamsContext","createContext","pickerParams","setPickerParams","toggleParam","defaultPickerSelected","structures","PickerSelectedContext","pickerSelected","nChanges","setPickerSelected","toggleSelectedObject","what","objectId","filterSelected","objects","filter","obj","unselect","ids","StructurePickerProvider","nChangesSelected","useRef","pickerValue","useMemo","newVal","currVal","selectedValue","current","toSelect","xor","children","filterStructs","toggles","object","index","isPlotable","structID","str","struct","toTest","RegExp","test","NoStructuresMessage","NoMatchingStructuresMessage","StructurePicker","useContext","filteredObjs","structsAndPlotables","values","orderBy","isSelected","backgroundColor","justifyContent","alignItems","marginRight","cursor","onDisplay","onDisplaySelected","intersection","displayedStructs","displayedPlotables","newSelectedStructs","newSelectedPlotables","plotableID","ResponsiveReactGridLayout","WidthProvider","Responsive","selectedPlotStyles","PlotDashboard","currentBreakpoint","compactType","mounted","lg","emptyDashboard","noTabsMessage","noPlotsMessage","fontWeight","padding","toggleSelected","onBreakpointChange","breakpoint","onResizeStop","finalL","initL","i","higher","h","shouldComponentUpdate","newProps","_plotsInLayout","hasDifferentPlots","isDifferentTab","newTab","isEqual","onLayoutChange","elemParams","alert","JSON","stringify","plotFiles","acceptedFiles","getLayout","newPlotLayout","draggableCancel","measureBeforeMount","useCSSTransforms","preventCollision","rowHeight","generateDOM","removePlots","movePlots","iTab","findIndex","renderSelectedManager","nSelected","Paper","merge","toggleSelect","l","ctrlKey","flexWrap","minWidth","borderRight","Files","defaultProps","cols","md","sm","xs","xxs","x","grid_dims","y","w","setTabPlots","withHotKeys","Dropdown","disableClearable","isClearable","freeSolo","isCreatable","multiple","isMulti","options","getValueFromObj","Array","isArray","sanitizeValue","getObjFromValue","Autocomplete","fullWidth","getOptionLabel","option","renderInput","plotOptions","StructureRow","groupActive","marginLeft","moveStructToActiveGroup","OPTIONS","MergeMethodPicker","StructuresGroup","initializingOptions","plotClasses","mergeMethod","activenessStyles","splitGroup","removeGroup","setGroupAsActive","Grid","container","transition","borderTopLeftRadius","item","val","onInitParamChange","PlotableRow","default_plot","selectPlots","plotOption","newGroup","groupParams","markActiveGroup","iGroup","groups","group","NothingToPlotMessage","informLoadingPlot","informLoadedPlot","selectedStructures","structureGroups","setStructureGroups","plotablesPlots","setPlotablesPlots","defaultTabID","selPlotables","selStructures","newStructureGroups","nChangesRef","prevSelectedStructures","prevStructs","newStructs","concat","cleanGroups","updateGroupInitParams","g","splitted","addGroup","endIcon","plotType","plotable_path","plot_method","animation","plotClass","SwitchInput","setting","Switch","checked","ColorPicker","tempcolor","setTempcolor","showColorPicker","setShowColorPicker","colorPicker","hex","onChangeComplete","RangeSlider","min","max","step","marks","Slider","getAriaLabel","valueLabelDisplay","Range","handleChange","oldValue","number","valid","finalVal","Numeric","additionalProps","ArrayInput","handleNone","shape","fill","orientationStyles","vertical","inputStyle","cloneDeep","changeValue","DragHandle","SortableHandle","SortableItem","SortableElement","sortable","remove","SortableList","SortableContainer","sanitizeVal","INPUT_FIELDS","textinput","bool","dict","fields","field","onValueChange","paramKey","paramValue","new_cat_value","setNewCatValue","creatable_fields","getParam","onItemChange","renderItem","param","deleteItem","default","addNewItem","rangeslider","range","vector","list","onSortEnd","arrayMove","oldIndex","newIndex","useDragHandle","removeItem","itemInput","Number","changeSettingValue","newValue","changeSettings","onSettingChangeType","onSettingChangeExtraParams","actionType","settingKey","extraParams","InputComponent","fieldLayout","tooltipParams","help","stopPropagation","SettingsForm","changedFields","setChangedFields","paramGroup","settingsGroup","groupedParams","subGrouped","groupBy","nullSubGroup","description","subGroups","enableReinitialize","initialValues","onSubmit","submitSettings","fromEntries","entries","handleSubmit","setFieldValue","resetForm","parse","SettingGroupsCollapse","groupKey","Icon","SettingsContainer","paramGroups","iParamGroup","activePlot","plotSettings","setsCont","mediaType","maxHeight","multiline","Method","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpansionPanelActions","applyMethod","Methods","PlotEditor","UNDO_SETTINGS","SUBMIT_ALL_SETTINGS","unsubmittedSettings","plotly","debug","advancedTraceTypeSelector","Tab","selectTab","contentEditable","onBlur","blur","textContent","updateTabName","Tabs","moveThroughTabs","newI","updateTabs","TabComponent","tabComponent","NewTabComponent","newTabComponent","noTabsComponent","configure","logLevel","simulateMissingKeyPressEvents","setEditable","defaultValue","onKeyPress","onDoubleClick","NewTabButton","Plots","n","k","selectedRef","getApplicationKeyMap","MainComponent","PlotTweaking","PlotMethods","PlotInitializer","Toolbar","goto","getWindowDimensions","window","innerWidth","innerHeight","SislDocs","windowDimensions","setWindowDimensions","useEffect","handleResize","removeEventListener","useWindowDimensions","src","Box","mesh","hovered","setHover","setActive","useFrame","rotation","scale","onPointerOver","onPointerOut","attach","NotConnected","sign","sessionFile","downloadSession","blob","Blob","url","URL","createObjectURL","link","createElement","setAttribute","click","setConnected","tabKey","setTabKey","camera","isEmpty","sessionClass","currentSession","root_dir","ConnectionStatus","addStyles","connectedStyle","disconnectedStyle","TabPanel","other","role","sx","a11yProps","MainPage","setValue","bgcolor","orientation","borderColor","Syncronizer","askForSession","setCurrentSession","justUpdated","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0424601.chunk.js","sourcesContent":["export const ADD_PLOTS = 'ADD_PLOTS'\nexport const REMOVE_PLOT = 'REMOVE_PLOT'\nexport const ADD_TABS = 'ADD_TABS'\nexport const SET_TAB_PLOTS = 'SET_TAB_PLOTS'\nexport const SET_SESSION_TABS = 'SET_SESSION_TABS'\n//Activate\nexport const SET_ACTIVE_PLOT = 'SET_ACTIVE_PLOT'\nexport const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB'\n//Deactivate\nexport const SET_SESSION = 'SET_SESSION'\nexport const CLEAR_SESSION = 'CLEAR_SESSION'\nexport const START_LOADING_PLOT = 'START_LOADING_PLOT'\nexport const END_LOADING_PLOT = 'END_LOADING_PLOT'\nexport const SET_ACTIVE_PAGE = 'SET_ACTIVE_PAGE'\n\n\n","import { CLEAR_SESSION, SET_SESSION } from '../actions/actionTypes'\n\nconst defaultState = {}\n\nconst session = (state = defaultState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_SESSION:\n            newState = action.session\n\n            console.warn(\"REDUX: Setting session...\", Object.keys(newState.plotables || {}).length)\n\n            return newState\n        \n        case CLEAR_SESSION:\n            return defaultState\n\n        default:\n            return state\n    }\n}\n\nexport default session","import { ADD_PLOTS, CLEAR_SESSION, REMOVE_PLOT } from '../actions/actionTypes'\nimport _ from \"lodash\"\n\nconst defaultState = {};\n\nconst plots = (state = defaultState, action) => {\n    let newState;\n    switch (action.type) {\n        case ADD_PLOTS:\n            console.log(\"REDUX: Storing a new plot...\")\n            newState = {\n                ...state,\n                ...action.newPlots,\n            }\n            console.log(newState)\n            return newState\n        \n        case REMOVE_PLOT:\n            return _.omit(state, [action.plotID])\n        \n        case CLEAR_SESSION:\n            return defaultState\n            \n        default:\n            return state\n    }\n}\n\nexport default plots","import { \n    SET_ACTIVE_PLOT,\n    SET_ACTIVE_TAB,\n    CLEAR_SESSION,\n    SET_ACTIVE_PAGE,\n    SET_SESSION\n} from '../actions/actionTypes'\n\nimport _ from \"lodash\"\n\nconst defaultState = {plot: undefined, tab: undefined, structs: [], plotables:[], page: \"plots\"};\n\nconst active = (state = defaultState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_ACTIVE_PLOT:\n            console.log(\"REDUX: Setting active plot...\")\n            newState = {\n                ...state,\n                plot: action.plotID,\n            }\n            console.log(newState)\n            return newState\n\n        case SET_ACTIVE_TAB:\n            console.log(\"REDUX: Setting active tab...\")\n            newState = {\n                ...state,\n                tab: action.activeTab,\n            }\n            console.log(newState)\n            return newState\n        \n        case SET_SESSION:\n\n            const activeTabInSession = _.find(action.session.tabs, [\"id\", state.tab])\n            const anyTab = action.session.tabs.length > 0\n            \n            if (activeTabInSession) {\n                return state\n            } else if (anyTab){\n                return {...state, tab: action.session.tabs[0].id}\n            } else {\n                return { ...state, tab: null}\n            }\n        \n        case SET_ACTIVE_PAGE:\n\n            newState = {\n                ...state,\n                page: action.pageName,\n            }\n\n            return newState\n        \n        case CLEAR_SESSION:\n            return defaultState\n                \n        default:\n            return state\n    }\n}\n\nexport default active","import { \n    START_LOADING_PLOT,\n    END_LOADING_PLOT\n} from '../actions/actionTypes'\n\nimport _ from 'lodash';\n\nconst loading = (state = {plots:{}}, action) => {\n    let newState;\n    switch (action.type) {\n        case START_LOADING_PLOT:\n            console.log(\"REDUX: Setting active plot...\")\n            newState = {\n                ...state,\n                plots: {\n                    ...state.plots,\n                    [action.plot.id]: {\n                        ...action.plot,\n                        from: new Date()\n                    }\n                }\n            }\n            console.log(newState)\n            return newState\n        \n        case END_LOADING_PLOT:\n            console.log(\"REDUX: Changing plot settings (not submitting yet)...\")\n            newState = {\n                ...state,\n                plots: _.omit(state.plots, [action.plotID]),\n            }\n            console.log(newState)\n            return newState\n                \n        default:\n            return state\n    }\n}\n\nexport default loading","import storage from \"redux-persist/lib/storage\"\nimport { persistReducer } from 'redux-persist';\nexport function persist(key, whitelist, reducer) {\n    return persistReducer({\n        key,\n        storage,\n        whitelist,\n    }, reducer);\n}","import { combineReducers } from 'redux'\nimport {createResponsiveStateReducer} from 'redux-responsive'\n\nimport session from './session'\nimport plots from './plots'\nimport active from './active'\nimport loading from './loading'\nimport { persist } from './persist'\n\nexport default combineReducers({\n    session,\n    plots,\n    loading: persist('loading', ['plots'], loading),\n    active: persist( 'active', ['tab', 'plot'], active),\n    browser: createResponsiveStateReducer({\n        small: 600,\n        medium: 992,\n    })\n})\n\nexport const selectActivePlot = (state) => {\n    return state.plots[state.active.plot]\n}","import { createStore } from 'redux'\nimport {responsiveStoreEnhancer} from 'redux-responsive'\nimport { persistStore} from 'redux-persist'\n\nimport rootReducer from '../reducers'\n\nconst getStoreAndPersistor = () => {\n  let store = createStore(rootReducer, responsiveStoreEnhancer)\n  let persistor = persistStore(store)\n  //persistor.purge()\n  return { store, persistor }\n}\n\nexport default getStoreAndPersistor","import { \n    ADD_PLOTS,\n    REMOVE_PLOT,\n    ADD_TABS,\n    SET_TAB_PLOTS,\n    SET_SESSION_TABS,\n    SET_ACTIVE_PLOT,\n    SET_ACTIVE_TAB,\n    CLEAR_SESSION,\n    SET_SESSION,\n    START_LOADING_PLOT,\n    END_LOADING_PLOT,\n    SET_ACTIVE_PAGE,\n} from './actionTypes'\n\nexport const setCurrentSession = (session) => {\n\n    return {\n        type: SET_SESSION,\n        session\n    }\n}\n    \nexport const addPlots = (newPlots, tabsIDs) => ({\n    type: ADD_PLOTS,\n    newPlots,\n    tabsIDs\n})\n\nexport const removePlot = (plotID, tabID) => ({\n    type: REMOVE_PLOT,\n    plotID,\n    tabID\n})\n\nexport const changeSettings = (actionType, settingKey, value, extraParams) => ({\n    type: actionType, //Valid action types are all of type CHANGE_<something>_SETTINGS\n    settingKey,\n    value,\n    extraParams // Here the plotID is passed, for example, if the actionType is CHANGE_PLOT_SETTINGS\n})\n\nexport const addTabs = (newTabs) => ({\n    type: ADD_TABS,\n    newTabs\n})\n\nexport const setTabPlots = (tabID, plots) => ({\n    type: SET_TAB_PLOTS,\n    tabID,\n    plots\n})\n\nexport const setSessionTabs = (tabs) => ({\n    type: SET_SESSION_TABS,\n    tabs\n})\n\nexport const setActivePlot = (plot) => ({\n    type: SET_ACTIVE_PLOT,\n    plotID: plot ? typeof(plot) == \"string\" ? plot : plot.id : undefined\n})\n\nexport const setActiveTab = (tab) => ({\n    type: SET_ACTIVE_TAB,\n    activeTab: tab\n})\n\nexport const clearSession = () => ({\n    type: CLEAR_SESSION,\n})\n\nexport const informLoadingPlot = (plot) => ({\n    type: START_LOADING_PLOT,\n    plot\n})\n\nexport const informLoadedPlot = (plotID) => ({\n    type: END_LOADING_PLOT,\n    plotID\n})\n\nexport const setActivePage = (pageName) => ({\n    type: SET_ACTIVE_PAGE,\n    pageName\n})\n\n\n\n","import { FC } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { InputFieldProps } from '../InputField'\n\nconst Text:FC<InputFieldProps<string>> = props => {\n    const value = props.value || \"\"\n\n    return (\n        <TextField\n            variant=\"outlined\"\n            value={value}\n            onChange={(e) => props.onChange(e.target.value)}\n            label={props.label}\n            style={{width: \"100%\", ...props.style}}\n            {...(props.inputField ? props.inputField.params : {})}/>\n    )\n}\n\nexport default Text;\n","import React, { Component } from 'react'\nimport { toast } from 'react-toastify'\n\nimport TextInput from \"../settings/inputFields/TextInput\"\nimport { Button } from '@material-ui/core'\n\nexport class Prompt extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            value: \"\"\n        }\n\n        if (props.controlClose){\n            props.controlClose(props.closeToast)\n        }\n    }\n\n    componentWillUnmount(){\n        this.props.callback(this.state.value)\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{paddingBottom: 10}}>{this.props.content}</div>\n                <TextInput value={this.state.value} onChange={(value) => {this.setState({value})}} label={this.props.inputProps.label}/>\n                <Button onClick={this.props.closeToast}>Submit</Button>\n            </div>\n        )\n    }\n\n}\n\nconst prompt = (content, callback, props) => {\n\n    toast(<Prompt content={content} callback={callback} {...props}/>, {autoClose: false, closeOnClick: false, onClose: (arg) => {console.warn(arg)} })\n\n}\n\nexport const connectionPrompt = (currentAddress, callback, props) => {\n\n    const content = <div>\n        <div>{\"Couldn't connect to \" + currentAddress}</div>\n        <div>Do you want to specify a different address for the API?</div>\n        <div> (http(s)://host:port)</div>\n    </div>\n\n    prompt(content, callback, {inputProps: {label: \"New address\" }, ...props})\n\n}\n\nexport const authPrompt = (callback, props) => {\n\n    const content = <div>\n        <div>Authorization is required</div>\n        <div>We need you to provide your username:</div>\n    </div>\n\n    prompt(content, callback, { inputProps: { label: \"Username\" }, ...props })\n\n} \n\nexport default prompt;\n","import io from 'socket.io-client';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport toastPrompt, {connectionPrompt} from '../components/prompts/Prompt';\n\nexport class PythonApi {\n\n    constructor() {\n\n        this.apiAddress = 'http://localhost:4000'\n        this.user = undefined\n\n        this.listeners = []\n        this.setupListeners()\n\n        this.connect()\n\n        /*This can be dangerous in the browser if the user let's other websites\n        access this tab. By default it is not possible, one would have to download\n        an extension to make it possible, but still. */ \n        document.api = this\n\n    }\n\n    connect = (address) => {\n\n        if (address) this.apiAddress = address\n\n        this.externalListeners = {}\n\n        this.socket = io(this.apiAddress);\n        this.listeners.forEach(listener => this.socket.on(...listener))\n\n        // Timeout to prompt the user for a new api address if the socket fails to connect\n        this.connectionTimeOut = setTimeout(() => {\n\n            connectionPrompt(this.apiAddress, (newAddress) => {\n                if (newAddress) {\n                    this.apiAddress = newAddress.trim()\n                }\n                if (!this.socket.connected){\n                    this.disconnect()\n                    this.connect()\n                }\n\n            }, {controlClose: (close) => this.onConnect(close)})\n            \n        }, 3000)\n\n        this.socket.connect()\n\n    }\n\n    disconnect = () => {\n        this.socket.disconnect()\n    }\n\n    on = (...args) => {\n\n        if (this.socket){\n            this.socket.on(...args)\n        }\n        // In this way all the listeners are registered each time\n        // The socket changes\n        this.listeners.push(args)\n    }\n\n    onConnect = (...args) => {\n        this.on('connect', ...args)\n    }\n\n    onDisconnect = (...args) => {\n        this.on('disconnect', ...args)\n    }\n\n    setupListeners = () => {\n\n        this.on('connect', () => {\n            //document.dispatchEvent(new Event('socket_connect'))\n            clearTimeout(this.connectionTimeOut)\n            this.requestSession()\n        });\n\n        this.on('disconnect', (reason) => {\n            console.warn(reason)\n            this.disconnect()\n            this.connect()\n        });\n\n        this.on('auth_required', this.askForAuth)\n\n        this.on('logged_in', this.requestSession)\n\n        this.on('error', (err) => this.handleError(err, \"socket\"));\n\n        this.on('server_error', (err) => this.handleError(err, \"server\"));\n        \n        this.on('current_session', (session) => {\n            document.dispatchEvent(new CustomEvent(\"syncWithSession\", { detail: { session } }))\n        })\n\n        this.on('loading_plot', (info) => {\n            document.dispatchEvent(new CustomEvent(\"loadingPlot\", { detail: info }))\n        })\n\n        this.on('plot', (plot) => {\n            document.dispatchEvent(new CustomEvent(\"plot\", { detail: { plot } }))\n        })\n\n    }\n\n    handleError = (err, type) => {\n        if (type === \"server\"){\n            toast.error(\"THERE WAS A PYTHON ERROR:\\n\" + err)\n        } else {\n            toast.error(err)\n        }\n        \n    }\n\n    askForAuth = () => {\n\n        if (this.authenticating) return\n\n        this.authenticating = true\n        toastPrompt((username) => {\n            this.socket.emit(\"login\", username)\n            this.authenticating = false\n        })\n    }\n\n    requestSession = (path) => {\n        this.socket.emit('request_session', path)\n    }\n\n    loadSession = (path) => {\n        this.requestSession(path)\n    }\n\n    loadSessionFromFile = (file) => {\n        this.socket.emit('load_session_from_file', file, file.name)\n    }\n\n    getSessionFile = (callback) => {\n\n        this.socket.once(\"session_file\", (sessionfile) => {\n            callback(sessionfile)\n        })\n\n        this.socket.emit('get_session_file')\n    }\n\n    newProcessId = uuidv4\n\n    _sessionMethod = (methodName, kwargs, callback, ...args) => {\n        /* With this you can call any session method\n        \n        However this method should not be directly used.\n        A new method should be defined in this class to avoid \n        headaches with changes in method names in sisl.viz.Session\n        \n        You have the possibility to set up a callback, but remember that \n        by default the session will be emitted by the server and its update\n        is automatic. Therefore, only use the callback if you are using a\n        \"getter\" method and you want to act according to the results. You may\n        want also to inform the user that the process has finished. But again,\n        this behavior should also be taken care of automatically.*/\n\n        if (callback) {\n            \n        }\n\n        this.socket.emit(\"apply_method_on_session\", methodName, kwargs, ...args)\n    }\n\n    callSessionShortcut = (sequence) => {\n        this._sessionMethod(\"call_shortcut\", null, null, sequence)\n    }\n\n    updateSessionSettings = (newSettings) => {\n        this._sessionMethod(\"update_settings\", newSettings)\n    }\n\n    undoSessionSettings = () => {\n        this._sessionMethod(\"undo_settings\")\n    }\n\n    addTab = (tabName) => {\n        this._sessionMethod(\"add_tab\", {name: tabName})\n    }\n\n    removeTab = (tabID) => {\n        this._sessionMethod(\"remove_tab\", {tabID})\n    }\n\n    updateTab = (tabID, newParams) => {\n        this._sessionMethod(\"update_tab\", { tabID, newParams })\n    }\n\n    setTabLayouts = (tabID, layouts) => {\n        this.updateTab(tabID, {layouts})\n    }\n\n    saveSession = (path) => {\n        this._sessionMethod(\"save\", {path})\n    }\n\n    getPlot = (plotID) => {\n        document.dispatchEvent(new CustomEvent(\"updatingPlot\", {detail: {plot_id: plotID}}))\n        this.socket.emit(\"get_plot\", plotID)\n    }\n\n    newPlot = (newPlotKwargs) => {\n        this._sessionMethod(\"new_plot\", newPlotKwargs)\n    }\n\n    removePlot = (plotID) => {\n        this._sessionMethod(\"remove_plot\", null, null, plotID)\n    }\n\n    movePlot = (plotID, tab) => {\n        this._sessionMethod(\"move_plot\", null, null, plotID, tab)\n    }\n\n    mergePlots = (plotIDs, to) => {\n        this._sessionMethod(\"merge_plots\", {to}, null, plotIDs)\n    }\n\n    _plotMethod = (plotID, methodName, kwargs, callback, ...args) => {\n        this._sessionMethod(\"_run_plot_method\", kwargs, callback, plotID, methodName, ...args)\n    }\n\n    showPlotFullScreen = (plotID) => {\n        this._plotMethod(plotID, \"show\")\n    }\n\n    updatePlotSettings = (plotID, settings) => {\n        this._plotMethod(plotID, \"update_settings\", settings)\n    }\n\n    undoPlotSettings = (plotID) => {\n        this._plotMethod(plotID, \"undo_settings\")\n    }\n\n    updatePlotLayout = (plotID, layoutUpdates) => {\n        this._plotMethod(plotID, \"update_layout\", layoutUpdates)\n    }\n\n    updateFigure = (plotID, {layout, data, frames, overwrite}) => {\n        this._plotMethod(plotID, \"update\", {layout, data, frames, overwrite})\n    }\n\n    callPlotShortcut = (plotID, sequence) => {\n        this._plotMethod(plotID, \"call_shortcut\", null, null, sequence)\n    }\n\n    dispatchPlotEvent = (plotID, event, data) => {\n        this._plotMethod(plotID, 'dispatch_event', data, null, event)\n    }\n\n    savePlot = (plotID, path) => {\n        this._plotMethod(plotID, \"save\", { path: path })\n    }\n\n    plotFile = (file) => {\n        this.socket.emit(\"plot_file\", file, file.name)\n    }\n\n}\n\nexport default new PythonApi();","\nexport const GLOBAL_HOT_KEYS = {\n\n    //HELP\n    SHOW_AVAIL_HOTKEYS:{\n        name: \"Show available hotkeys\",\n        sequence: \"shift+?\"\n    },\n\n    //NAVIGATION\n    GO_TO_SETTINGS: {\n        name: \"Go to settings\",\n        sequence: \"shift+s\",\n    },\n    GO_TO_DASHBOARD: {\n        name: \"Go to the plot's dashboard\",\n        sequence: \"shift+d\",\n    },\n    GO_TO_MOLECULEVIEWER: {\n        name: \"Go to the molecule viewer\",\n        sequence: \"shift+m\",\n    },\n\n    //SESSION\n    SAVE_SESSION: {\n        name: \"Save session\",\n        sequences: [\"ctrl+shift+s\", \"ctrl+alt+s\"]\n    },\n    LOAD_SESSION: {\n        name: \"Load session\",\n        sequences: [\"ctrl+shift+l\", \"ctrl+alt+l\"]\n    }\n\n}\n\nexport const ADDITIONAL_GLOBAL_HOT_KEYS = {\n    settings: {\n\n    },\n    plots:{\n        \n\n    }\n}\n\nexport const SETTINGS_HOT_KEYS = {\n\n}\n\nexport const TABS_HOT_KEYS = {\n    global: {\n        // TAB NAVIGATION\n        MOVE_TO_NEXT_TAB: {\n            name: \"Move to next tab\",\n            sequence: \"shift+t+right\",\n        },\n        MOVE_TO_PREVIOUS_TAB: {\n            name: \"Move to previous tab\",\n            sequence: \"shift+t+left\",\n        },\n        NEW_TAB: {\n            name: \"New tab\",\n            sequence: \"shift+t\",\n            action: \"keyup\"\n        },\n        TRY: \"shift+t+r\"\n    }\n}\n\nexport const PLOTS_HOT_KEYS = {\n    global: {\n        // TAB NAVIGATION\n        MOVE_TO_NEXT_TAB: {\n            name: \"Move to next tab\",\n            sequence: \"shift+right\",\n        },\n        MOVE_TO_PREVIOUS_TAB: {\n            name: \"Move to previous tab\",\n            sequence: \"shift+left\",\n        },\n    }\n}\n\nexport const PLOT_CARD_HOT_KEYS = {\n\n    GO_TO_PLOT_SETTINGSEDITING: {\n        name: \"Edit current plot's settings\",\n        sequence: \"s\"\n    },\n    GO_TO_PLOT_LAYOUTEDITING: {\n        name: \"Edit current plot's layout\",\n        sequence: \"e\"\n    },\n    GO_TO_PLOT_METHODS: {\n        name: \"Go to current plot methods\",\n        sequence: \"m\"\n    },\n    FULL_SCREEN: {\n        name: \"See current plot in full screen in a different browser's tab\",\n        sequence: \"f\"\n    },\n    REMOVE_PLOT: {\n        name: \"Remove current plot\",\n        sequences: [\"del\",\"backspace\"]\n    },\n    UNDO_PLOT_SETTINGS: {\n        name: \"Undo current plot settings\",\n        sequence: \"ctrl+z\"\n    },\n\n}\n\nexport const STRUCTURE_PICKER_HOT_KEYS = {\n\n}\n\nexport const SETTING_CONTAINER_HOT_KEYS = {\n\n    MOVE_EXPANDED_UP:{\n        name: \"Expand the previous settings group\",\n        sequence: \"up\"\n    },\n    MOVE_EXPANDED_DOWN:{\n        name: \"Expand the next settings group\",\n        sequence: \"down\"\n    }\n\n}\n\nexport const SETTING_GROUP_HOT_KEYS = {\n\n    SUBMIT_SETTINGS:{\n        name: \"Submit this group's settings\",\n        sequence: \"shift+enter\"\n    },\n    \n}\n\nexport const PLOT_TWEAKING_HOT_KEYS = {\n    global:{\n        UNDO_SETTINGS: {\n            name:\"Undo settings\",\n            sequence: \"ctrl+z\"\n        },\n\n        SUBMIT_ALL_SETTINGS: {\n            name: \"Submit all settings\",\n            sequence: \"shift+enter\"\n        }\n    }\n}","import React, { Component } from 'react'\nimport Plot from 'react-plotly.js';\nimport Card from \"@material-ui/core/Card\"\nimport { AiOutlineEdit, AiOutlineDelete, AiOutlineExport, AiOutlineFullscreen } from 'react-icons/ai'\nimport { FaHammer, FaSave } from 'react-icons/fa'\nimport { MdSettings } from 'react-icons/md'\nimport { IconContext } from 'react-icons'\n\nimport ReactTooltip from \"react-tooltip\"\n\nimport _ from \"lodash\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setActivePlot, removePlot, setSessionTabs, setActivePage, addPlots} from \"../../redux/actions\"\nimport PythonApi from '../../apis/PythonApi';\nimport { HotKeys } from 'react-hotkeys';\nimport { PLOT_CARD_HOT_KEYS } from '../../utils/hotkeys';\nimport { toast } from 'react-toastify';\nimport { IconButton } from '@material-ui/core';\n\nclass PlotCard extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoading: false,\n            editable: false,\n        }\n\n    }\n\n    hotKeys = () => document.querySelectorAll(\".plotCardHotKeys\")\n\n    hotKeysHandlers = {\n        GO_TO_PLOT_LAYOUTEDITING: () => this.goToPlotLayoutEditing(),\n        GO_TO_PLOT_SETTINGSEDITING: () => this.goToPlotSettingsEditing(),\n        GO_TO_PLOT_METHODS: () => this.goToPlotMethods(),\n        FULL_SCREEN: () => this.showPlotFullScreen(),\n        UNDO_PLOT_SETTINGS: () => this.undoSettings(),\n        REMOVE_PLOT: () => this.removePlot(),\n    }\n\n    callPlotShortcut = (sequence) => {\n        toast.warn(\"Applying \" + this.props.plot.shortcuts[sequence].name + \" shortcut\")\n        PythonApi.callPlotShortcut(this.props.plot.id, sequence)\n    }\n\n    handlePlotClick = ({points}) => {\n        const data = _.omit(points[0], [\"data\", \"fullData\", \"xaxis\", \"yaxis\"])\n        console.warn(data)\n        PythonApi.dispatchPlotEvent(this.props.plot.id, \"click\", data)\n    }\n\n    handlePlotRelayout = (layoutUpdates) => {\n        if (layoutUpdates[\"scene.camera\"]) return\n\n        const keys = Object.keys(layoutUpdates)\n        if (keys.includes(\"autosize\")) return \n        else if (keys.length === 0) return\n        else {\n            PythonApi.updatePlotLayout(this.props.plot.id, layoutUpdates)\n        }\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.plot.id)\n    }\n\n    componentDidMount(){\n        document.addEventListener(\"plotResize\", (e) => {\n            \n            if (e.detail.id === this.props.plot.id || e.detail.id === \"all\"){\n                this.setState({cou: Math.random()})          \n            }\n            \n        })\n    }\n\n    removePlot = () => {\n        PythonApi.removePlot(this.props.plot.id)   \n    }\n\n    goToPlotSettingsEditing = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotTweaking\")\n    }\n\n    goToPlotLayoutEditing = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotLayoutEditor\")\n    }\n\n    goToPlotMethods = () => {\n        this.setPlotAsActive()\n        this.props.setActivePage(\"plotMethods\")\n    }\n\n    setPlotAsActive = () => {\n        this.props.setActivePlot(this.props.plot)\n    }\n\n    togglePlotAsActive = () => {\n        if (this.isActivePlot){\n            this.props.setActivePlot(undefined)\n        } else {\n            this.setPlotAsActive()\n        }\n    }\n\n    savePlot = () => {\n        let path = prompt(\"Please provide the path to save the plot.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return\n\n        PythonApi.savePlot(this.props.plot.id, path)\n    }\n\n    get isActivePlot(){\n        return this.props.plot.id === this.props.active.plot\n    }\n\n    showPlotFullScreen = () => {\n        PythonApi.showPlotFullScreen(this.props.plot.id)\n    }\n\n    render() {\n\n        if (this.state.isLoading || !this.props.plot) {\n            return (\n                <Card \n                    className=\"plotcard\"\n                    style={{borderRadius: 15}}>\n                    <div>We are working hard to load your plot.</div>\n                </Card>\n            )\n        }\n\n        if (! this.props.plot.figure){\n            return (\n                <Card\n                    className=\"plotcard\"\n                    style={{ borderRadius: 15 }}>\n                    <div>A figure could not be generated for this plot.</div>\n                </Card>\n            )\n        }\n\n        let layout = this.props.plot.figure.layout;\n        let backColor = layout.paper_bgcolor || \"white\"\n\n        const hotKeysKeyMap = {\n            ...PLOT_CARD_HOT_KEYS,\n            TESTING: \"shift+r\",\n            ...Object.keys(this.props.plot.shortcuts).reduce((plotShortcuts, sequence) => {\n                let shortcut = this.props.plot.shortcuts[sequence]\n                if ([\"ctrl+z\", \"ctrl+alt+l\"].includes(sequence)) return plotShortcuts\n                    plotShortcuts[shortcut.name.replace(/ /g, \"_\")] = {\n                    sequence: sequence,\n                    ...shortcut\n                }\n                return plotShortcuts\n            }, {})\n        }\n\n        const hotKeysHandlers = {\n            ...this.hotKeysHandlers,\n            ...Object.keys(this.props.plot.shortcuts).reduce((plotShortcuts, sequence) => {\n                let shortcut = this.props.plot.shortcuts[sequence]\n                if ([\"ctrl+z\", \"ctrl+alt+l\"].includes(sequence)) return plotShortcuts\n                plotShortcuts[shortcut.name.replace(/ /g, \"_\")] = () => this.callPlotShortcut(sequence)\n                return plotShortcuts\n            }, {})\n        }\n\n        const activeStyles = this.isActivePlot && false ? {\n            borderStyle: \"dashed\",\n            borderWidth: \"2px\",\n            borderColor: \"black\"\n        } : {}\n\n        return <HotKeys\n                 className=\"plotCardHotKeys\"\n                 //onClick={(e) => {if (e.ctrlKey && false){this.togglePlotAsActive()}}}\n                 component={Card}\n                 elevation={this.props.elevation || 1}\n                 keyMap={hotKeysKeyMap} handlers={hotKeysHandlers} allowChanges={true}\n                 style={ {width: \"100%\", height: \"100%\", display: \"flex\", flexDirection: \"column\", borderRadius: 3, overflow:\"hidden\", background: backColor, paddingTop: 5, ...activeStyles, ...this.props.style}}>\n                <div style={{flex:1}}>\n                    <Plot\n                        ref={plotlyRef => {\n                            this.plotlyRef = plotlyRef;\n                        }}\n                        useResizeHandler\n                        style={{ width: \"100%\", height: \"100%\"}}\n                        data={this.props.plot.figure.data}\n                        layout={{autosize: true, title: \"\", ...layout}}\n                        frames={this.props.plot.figure.frames}\n                        onClick={this.handlePlotClick}\n                        onRelayout={this.handlePlotRelayout}\n                        onUpdate={(figure) => {}}//PythonApi.updateFigure(this.props.plot.id, figure)}\n                    config={{editable: this.state.editable, responsive: true}}\n                    />\n                </div>\n                \n            <div style={{ display: \"flex\", paddingLeft: 10, paddingRight: 20, background: backColor, marginBottom: 5}} className=\"card-action\">\n                <IconContext.Provider value={{ size: 25, style: { margin: 5 }, color: \"#6eb6ff\"}}>\n                    <div style={{flex:1, textAlign: \"left\"}}>\n                        <IconButton size=\"small\" data-tip=\"Full screen (f)\" onClick={this.showPlotFullScreen}><AiOutlineFullscreen/></IconButton> \n                    </div>\n\n                    <div>\n                        <IconButton\n                            size=\"small\"\n                            data-tip=\"Settings (s)\"\n                            onClick={this.goToPlotSettingsEditing}><MdSettings /></IconButton>\n                        <IconButton\n                            size=\"small\"\n                            data-tip=\"Methods (m)\"\n                            onClick={this.goToPlotMethods}><FaHammer/></IconButton>\n                        <IconButton\n                            size=\"small\"\n                            data-tip=\"Editable\"\n                            onClick={() => this.setState({editable: !this.state.editable})}><MdSettings /></IconButton>\n                        <IconButton\n                            size=\"small\"\n                            data-tip=\"Edit layout (e)\"\n                            onClick={this.goToPlotLayoutEditing}><AiOutlineEdit/></IconButton>\n                        <IconButton size=\"small\" data-tip=\"Save plot (coming soon)\"><FaSave color=\"#ccc\"/></IconButton>\n                        <IconButton size=\"small\" data-tip=\"Export data (coming soon)\"><AiOutlineExport color=\"#ccc\"/></IconButton>\n                        <IconButton size=\"small\" data-tip=\"Remove (supr)\" onClick={this.removePlot}><AiOutlineDelete color=\"red\"/></IconButton>\n                    </div> \n                </IconContext.Provider>\n                <ReactTooltip effect=\"solid\" place=\"bottom\" disable={this.props.session.settings ? !this.props.session.settings.showTooltips : false} /> \n            </div>\n        </HotKeys>\n    }\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setSessionTabs,\n    setActivePlot,\n    removePlot,\n    setActivePage,\n    addPlots\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotCard);\n","import { FC, useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\n\n// Files input is not yet an input field supported for parameters\n\ninterface FilesInputProps {\n    placeholder: string,\n    onChange: (files: File[]) => void,\n    style?: {[key:string]: any},\n}\n\nconst FilesInput:FC<FilesInputProps> = ({placeholder, onChange, style }) => {\n    const onDrop = useCallback((files: File[]) => onChange(files), [onChange])\n    const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n    return (\n        <div {...getRootProps()} style={style}>\n            <input {...getInputProps()} />\n            <p>{placeholder}</p>\n        </div>\n    )\n}\n\nexport default FilesInput;\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nimport { FaSave} from 'react-icons/fa'\nimport { AiOutlineUpload } from 'react-icons/ai'\nimport { setActivePage } from '../../redux/actions'\n\nimport PythonApi from '../../apis/PythonApi'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        transform: 'translateZ(0px)',\n        flexGrow: 1,\n    },\n    exampleWrapper: {\n        position: 'relative',\n        marginTop: theme.spacing(3),\n    },\n    radioGroup: {\n        margin: theme.spacing(1, 0),\n    },\n    speedDial: {\n        position: 'absolute',\n        '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n        },\n        '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n            top: theme.spacing(2),\n            left: theme.spacing(2),\n        },\n    },\n}));\n\nfunction SpeedDials(props) {\n    const classes = useStyles();\n    const direction = React.useState('left')[0];\n    const [open, setOpen] = React.useState(false);\n    const hidden = React.useState(false)[0];\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    return (\n        <SpeedDial\n            ariaLabel=\"SpeedDial example\"\n            className={classes.speedDial}\n            hidden={hidden}\n            icon={<SpeedDialIcon />}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            open={open}\n            direction={direction}\n        >\n            {props.actions.map((action) => (\n                <SpeedDialAction\n                    key={action.name}\n                    icon={action.icon}\n                    tooltipTitle={action.tip || action.name}\n                    tooltipPlacement={\"top\"}\n                    onClick={action.onClick}\n                    href={action.href}\n                />\n            ))}\n        </SpeedDial>\n    );\n}\n\nclass Controls extends Component {\n\n    hotKeysHandler = {\n        SAVE_SESSION: () => this.saveCurrentSession(),\n        LOAD_SESSION: () => this.loadSession()\n    }\n\n    syncWithSession = (session) => {\n        document.dispatchEvent(new CustomEvent(\"syncWithSession\", {detail: {session}}))\n    }\n\n    showPage = (pageName) => {\n        this.props.setActivePage(pageName)\n    }\n\n    saveCurrentSession = () => {\n        let path = prompt(\"Please provide the path to save the session.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return \n\n        PythonApi.saveSession(path)\n    }\n\n    loadSession = () => {\n\n        let path = prompt(\"Please provide the path of the saved session.\\n\\nRoot directory:\\n\" + this.props.session.settings.rootDir)\n        if (!path) return\n\n        PythonApi.loadSession(path)\n    }\n\n    render() {\n\n        const actions = [{\n            name: \"Save session\",\n            icon: <FaSave size={20} />,\n            onClick: this.saveCurrentSession\n        }, {\n            name: \"Load session\",\n                icon: <AiOutlineUpload size={20} />,\n            onClick: this.loadSession\n        }]\n\n        return <SpeedDials actions={actions} />\n    }\n}\n\nexport class Control extends Component {\n\n    render(){\n        \n        return <Button\n                    data-tip={this.props.tooltip}\n                    style={this.props.style}\n                    floating\n                    icon={this.props.icon}\n                    onClick={this.props.onClick}\n                    className={this.props.className} />\n    }\n}\n\nconst mapStateToProps = state => ({\n    session: state.session,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n    setActivePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Controls);\n","import React, { Component } from 'react'\nimport { Control } from './Controls'\nimport { connect } from 'react-redux'\nimport { setActivePage } from '../../redux/actions'\nimport { IoMdSettings } from 'react-icons/io'\nimport { MdDashboard } from 'react-icons/md'\n\nexport const ROUTES = {\n    settings: {\n        name: \"Settings\",\n        icon: <IoMdSettings size={20}/>,\n        color: \"grey\",\n        hotKey: \"Shift + s\",\n    },\n    plots: {\n        name: \"Dashboard\",\n        icon: <MdDashboard/>,\n        color: \"grey\",\n        hotKey: \"Shift + d\"\n    }\n}\n\nclass NavigateButton extends Component {\n\n    showPage = () => {\n        this.props.setActivePage(this.props.to)\n    }\n\n    render() {\n\n        const route = ROUTES[this.props.to]\n\n        return <Control \n            icon={route.icon} \n            className={route.color}\n            tooltip={\"Go to \" + this.props.to + \" (\" + route.hotKey + \")\"}\n            onClick={this.showPage}\n            {...this.props}/>\n    }\n}\n\nconst mapDispatchToProps = {\n    setActivePage\n}\n\nexport default connect(null, mapDispatchToProps)(NavigateButton);\n","import { FC } from \"react\";\nimport { StructOrPlotableInterface} from \"../../interfaces\";\n\ninterface TagProps {\n    id: string,\n    selected: boolean,\n    toggle: () => void,\n}\n\ninterface PlotableTagProps extends TagProps {\n    plotable: StructOrPlotableInterface\n}\n\nexport const PlotableTag:FC<PlotableTagProps> = (props) => {\n    return (\n        <div\n            className={\"plotableTag \" + (props.selected ? \"active\" : \"\")}\n            onClick={props.toggle}\n            data-tip={props.plotable.path}\n            data-effect=\"solid\">\n            <div>{props.plotable.name}</div>\n            <div style={{ fontSize: \"0.7em\", color: \"gray\" }}>{\".../\" + props.plotable.path.split(\"/\").slice(-2, -1)[0]}</div>\n        </div>\n    )\n}\n\ninterface StructureTagProps extends TagProps {\n    structure: StructOrPlotableInterface\n}\n\nexport const StructureTag:FC<StructureTagProps> = (props) => {\n\n    return (\n        <div\n            className={\"structTag \" + (props.selected ? \"active\" : \"\")}\n            onClick={props.toggle}\n            data-tip={props.structure.path}\n            data-effect=\"solid\">\n            <div>{props.structure.name.replace(\".fdf\", \"\")}</div>\n            <div style={{ fontSize: \"0.7em\", color: \"gray\" }}>{\".../\" + props.structure.path.split(\"/\").slice(-2, -1)[0]}</div>\n        </div>\n    )\n}\n\nexport default PlotableTag;\n\n","import { FC, createContext, useMemo, useState, useRef} from 'react'\nimport _ from \"lodash\"\nimport { PlotableInterface, StructureInterface } from '../../interfaces'\n\nexport interface PickerParams {\n    searchString: string,\n    alphabeticSorting: false | \"asc\" | \"desc\",\n    selectedSorting: boolean,\n    searchByFolder: boolean,\n    displayStructures: boolean,\n    displayPlotables: boolean,\n}\n\nexport const defaultPickerParams: PickerParams = {\n    searchString: \"\",\n    alphabeticSorting: false,\n    selectedSorting: false,\n    searchByFolder: false,\n    displayStructures: true,\n    displayPlotables: true,\n}\n\nexport const PickerParamsContext = createContext({\n    pickerParams: defaultPickerParams,\n    setPickerParams: (params: Partial<PickerParams>) => { },\n    toggleParam: (name: keyof PickerParams) => { },\n})\n\nexport interface PickerSelectedInterface {\n    structures: string[],\n    plotables: string[],\n}\n\nexport const defaultPickerSelected: PickerSelectedInterface = {\n    structures: [],\n    plotables: [],\n}\n\ntype SelectedKeys = keyof PickerSelectedInterface\n\ntype ObjectInterface<T> = \n    T extends \"structures\" ? StructureInterface :\n    T extends \"plotables\" ? PlotableInterface : never\n\nfunction defaultFilterSelected<T extends SelectedKeys>(what: T, objects: { [id: string]: ObjectInterface<T> }): ObjectInterface<T>[] {\n    const selectedIds = defaultPickerSelected[what]\n\n    return selectedIds.map(id => objects[id]).filter(obj => obj !== undefined)\n}\n\nexport const PickerSelectedContext = createContext({\n    pickerSelected: defaultPickerSelected,\n    nChanges: 0,\n    setPickerSelected: (pickerSelected: Partial<PickerSelectedInterface>) => { },\n    toggleSelectedObject: (what: keyof PickerSelectedInterface, objectId: string) => { },\n    filterSelected: defaultFilterSelected,\n    unselect: (what: \"structures\" | \"plotables\", ids: string | string[]) => { },\n})\n\nconst StructurePickerProvider: FC = (props) => {\n    const [pickerParams, setPickerParams] = useState(defaultPickerParams)\n    const nChangesSelected = useRef(0)\n    const [pickerSelected, setPickerSelected] = useState(defaultPickerSelected)\n    \n    // Ensure that the consumers are not rerendered each time by memoizing the context value\n    // and then provide functions to alter the state\n\n    // For the picker parameters\n    const pickerValue = useMemo(() => {\n\n        // Function to toggle any parameter\n        const toggleParam = (name: keyof PickerParams) => {\n            let newVal;\n            if (name === \"alphabeticSorting\") {\n                const currVal = pickerParams.alphabeticSorting\n                if (currVal === false) newVal = \"asc\"\n                else if (currVal === \"asc\") newVal = \"desc\"\n                else if (currVal === \"desc\") newVal = false\n            } else {\n                newVal = !pickerParams[name]\n            }\n            setPickerParams({ ...pickerParams, [name]: newVal })\n        }\n\n        return {\n            pickerParams,\n            setPickerParams: (params: Partial<PickerParams>) => setPickerParams({ ...pickerParams, ...params }),\n            toggleParam\n        }\n\n    }, [pickerParams, setPickerParams])\n\n    // And for the selected values\n    const selectedValue = useMemo(() => {\n        nChangesSelected.current = nChangesSelected.current + 1\n\n        const toggleSelectedObject = (what: \"structures\" | \"plotables\", id: string) => {\n            const toSelect = _.xor(pickerSelected[what], [id])\n            setPickerSelected({ ...pickerSelected, [what]: toSelect})\n        }\n\n        function filterSelected<T extends SelectedKeys>(what: T, objects: { [id: string]: ObjectInterface<T> }): ObjectInterface<T>[]{\n            const selectedIds = pickerSelected[what]\n\n            return selectedIds.map(id => objects[id]).filter(obj => obj !== undefined)\n        }\n\n        const unselect = (what: \"structures\" | \"plotables\", ids: string | string[]) => {\n            if (typeof ids === \"string\") ids = [ids]\n            console.log(\"UNSELECTING\", ids, \"from\", pickerSelected)\n            console.log({ ...pickerSelected, [what]: pickerSelected[what].map(id => !ids.includes(id)) })\n\n            setPickerSelected({...pickerSelected, [what]: pickerSelected[what].filter(id => !ids.includes(id))})\n        }\n\n        return {\n            pickerSelected,\n            nChanges: nChangesSelected.current,\n            setPickerSelected: (toSelect: Partial<PickerSelectedInterface>) => setPickerSelected({ ...pickerSelected, ...toSelect }),\n            toggleSelectedObject,\n            filterSelected,\n            unselect\n        }\n\n    }, [pickerSelected, setPickerSelected])\n\n    return <PickerParamsContext.Provider value={pickerValue}>\n        <PickerSelectedContext.Provider value={selectedValue}>\n            {props.children}\n        </PickerSelectedContext.Provider>\n    </PickerParamsContext.Provider>\n}\n\nexport default StructurePickerProvider;","import { FC, useContext, CSSProperties } from 'react'\nimport _ from \"lodash\"\nimport { MdFolder, MdFolderOpen} from 'react-icons/md'\n\nimport NavigateButton from '../controls/NavigateButton'\nimport {PlotableTag, StructureTag} from './Tag'\nimport TextInput from '../settings/inputFields/TextInput'\nimport { PlotableInterface, StructureInterface, StructOrPlotableInterface } from '../../interfaces'\nimport { PickerParams, PickerParamsContext, PickerSelectedContext } from './pickerContext'\n\n\nfunction wildTest(wildcard: string, str: string) {\n    const re = new RegExp(`^${wildcard.replace(/\\*/g,'.*').replace(/\\?/g,'.')}$`,'i');\n    return re.test(str); // remove last 'i' above to have case sensitive\n}\n\ninterface FilteredObject extends StructOrPlotableInterface{\n    isPlotable: boolean,\n}\n\nconst filterStructs = (\n    structures: { [key: string]: StructureInterface }, plotables: {[key: string]: PlotableInterface }, \n    pickerParams: PickerParams,\n) => {\n\n    let searchString = pickerParams.searchString\n\n    searchString = searchString.includes(\"*\") || searchString.includes(\"?\") ? searchString : \"*\" + searchString + \"*\"\n\n    let toggles = [pickerParams.displayStructures, pickerParams.displayPlotables]\n    let objs: { [key: string]: StructureInterface | PlotableInterface }[] = [structures, plotables]\n\n    // Filter both structures and plotables\n    return objs.reduce<{ [key: string]: FilteredObject }>((structs, object, index: number) => {\n\n        if (!toggles[index]) return structs\n\n        const isPlotable = index === 1\n\n        Object.keys(object).forEach((structID) => {\n\n            const struct = object[structID]\n\n            const toTest = pickerParams.searchByFolder ? struct.path.split(\"/\").slice(-2, -1)[0] : struct.name//.replace(\".fdf\", \"\")\n\n            if (wildTest(searchString, toTest)) {\n\n                structs[structID] = {\n                    ...struct,\n                    isPlotable,\n                }\n            }\n        })\n\n        return structs\n\n    }, {})\n\n}\n\nconst NoStructuresMessage:FC = (props) => {\n    return <div>\n        <div style={{ color: \"darkred\" }}>No structures in the search scope right now.</div>\n        <div>Try to change file system settings or initialize the GUI from a different directory</div>\n        <NavigateButton to=\"settings\" style={{ marginTop: 10 }} />\n    </div>\n}\n\nconst NoMatchingStructuresMessage:FC = (props) => {\n    return <div>\n        <div style={{ color: \"darkred\" }}>No structure that matches your search.</div>\n        <div>Try to change file system settings or initialize the GUI from a different directory</div>\n        <NavigateButton to=\"settings\" style={{ marginTop: 10 }} />\n    </div>\n}\n\ninterface StructurePickerProps {\n    structures: { [key: string]: StructureInterface },\n    plotables: {[key: string]: PlotableInterface },\n    style?: CSSProperties\n}\n\nconst StructurePicker:FC<StructurePickerProps> = (props) => {\n    const {pickerParams, setPickerParams, toggleParam} = useContext(PickerParamsContext)\n    const {pickerSelected, setPickerSelected, toggleSelectedObject} = useContext(PickerSelectedContext)\n\n    const filteredObjs = filterStructs(props.structures || {}, props.plotables || {}, pickerParams)\n    \n    let structsAndPlotables = Object.values(filteredObjs)\n    if (pickerParams.alphabeticSorting) {\n        structsAndPlotables = _.orderBy(structsAndPlotables, \"name\", pickerParams.alphabeticSorting)\n    }\n    if (pickerParams.selectedSorting) {\n        const isObjSelected = (struct: StructureInterface) => [...pickerSelected.structures, ...pickerSelected.plotables].includes(struct.id)\n        structsAndPlotables = _.orderBy(structsAndPlotables, isObjSelected, \"desc\")\n    }\n\n    const isSelected = (id: string) => [...pickerSelected.structures, ...pickerSelected.plotables].includes(id)\n\n    const toggleAllSelected = () => {\n        const onDisplay = Object.keys(filteredObjs)\n\n        const onDisplaySelected = _.intersection([...pickerSelected.structures, ...pickerSelected.plotables], onDisplay).length === 0\n\n        const displayedStructs = _.intersection(Object.keys(props.structures), onDisplay)\n        const displayedPlotables = _.intersection(Object.keys(props.plotables), onDisplay)\n\n        const newSelectedStructs = onDisplaySelected ?\n            [...displayedStructs, ...pickerSelected.structures]\n            :\n            pickerSelected.structures.filter(structID => !displayedStructs.includes(structID))\n        \n        const newSelectedPlotables = onDisplaySelected ?\n            [...displayedPlotables, ...pickerSelected.plotables]\n            :\n            pickerSelected.plotables.filter(plotableID => !displayedPlotables.includes(plotableID))\n\n        setPickerSelected({ structures: newSelectedStructs, plotables: newSelectedPlotables })\n\n    }\n\n    return (\n        <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", backgroundColor: \"white\", ...props.style }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", marginTop: 20, marginBottom: 20 }}>\n                <TextInput\n                    label=\"Search string\"\n                    style={{ marginRight: 10 }}\n                    value={pickerParams.searchString}\n                    onChange={(searchString) => setPickerParams({searchString})} />\n                <div\n                    data-tip=\"Search by folder\"\n                    className={\"structPickerToggle \" + (pickerParams.searchByFolder ? \"active\" : \"\")}\n                    onClick={() => toggleParam(\"searchByFolder\")} style={{ cursor: \"pointer\" }}>{pickerParams.searchByFolder ? <MdFolder /> : <MdFolderOpen />}</div>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: 5 }}>\n                <span\n                    data-tip=\"Show structures\"\n                    className={\"structPickerToggle \" + (pickerParams.displayStructures ? \"active\" : \"\")}\n                    onClick={() => toggleParam(\"displayStructures\")} style={{ cursor: \"pointer\" }}>Struct</span>\n                <span\n                    data-tip=\"Show plotables\"\n                    className={\"structPickerToggle \" + (pickerParams.displayPlotables ? \"active\" : \"\")}\n                    onClick={() => toggleParam(\"displayPlotables\")} style={{ cursor: \"pointer\" }}>Plotables</span>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", marginBottom: 5 }}>\n                <span\n                    className={\"structPickerToggle \" + (pickerParams.alphabeticSorting ? \"active\" : \"\")}\n                    onClick={() => toggleParam(\"alphabeticSorting\")} style={{ cursor: \"pointer\" }}>A-Z</span>\n                <span\n                    data-tip=\"Show selected first\"\n                    className={\"structPickerToggle \" + (pickerParams.selectedSorting ? \"active\" : \"\")}\n                    onClick={() => toggleParam(\"selectedSorting\")} style={{ cursor: \"pointer\" }}>sel</span>\n                <span\n                    className=\"structPickerToggle\"\n                    onClick={toggleAllSelected} style={{ cursor: \"pointer\" }}>All</span>\n            </div>\n\n            {Object.keys({ ...props.structures, ...props.plotables }).length === 0 ?\n                <NoStructuresMessage/> : Object.values(structsAndPlotables).length === 0 ?\n                    <NoMatchingStructuresMessage/> : null\n            }\n\n            <div style={{ flex: 1 }} className=\"scrollView\" >\n                {Object.values(structsAndPlotables).map(obj => {\n                    if (obj.isPlotable) {\n                        return <PlotableTag id={obj.id}\n                            plotable={obj}\n                            selected={isSelected(obj.id)}\n                            toggle={() => toggleSelectedObject(\"plotables\", obj.id)}\n                        />\n                    } else {\n                        return <StructureTag id={obj.id}\n                            structure={obj}\n                            selected={isSelected(obj.id)}\n                            toggle={() => toggleSelectedObject(\"structures\", obj.id)}\n                        />\n                    }\n\n                })}\n            </div>\n        </div>\n\n    )\n\n}\n\nexport default StructurePicker;\n","import React from \"react\";\n\nimport _ from \"lodash\"\n\n//--Components\nimport PlotCard from \"./PlotCard\";\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setTabPlots, setSessionTabs, setActivePlot} from \"../../redux/actions\"\nimport PythonApi from \"../../apis/PythonApi\";\n\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport { Paper, Button } from '@material-ui/core';\n\nimport 'react-grid-layout/css/styles.css'\nimport'react-resizable/css/styles.css'\n\nimport { withHotKeys } from \"react-hotkeys\"; //GlobalHotKeys\n//import { PLOTS_HOT_KEYS } from \"../../utils/hotkeys\";\nimport FilesInput from \"../settings/inputFields/Files\";\nimport StructurePicker from \"../structures/StructurePicker\";\n\nconst ResponsiveReactGridLayout = WidthProvider(Responsive);\n\nconst selectedPlotStyles = { backgroundColor: \"#757eff\",  paddingTop: 5, marginTop: -5}\n\nclass PlotDashboard extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this._plotsInLayout = false\n\n    this.state = {\n      selected: []\n    }\n\n  }\n\n  static defaultProps = {\n    className: \"layout\",\n    rowHeight: 30,\n    onLayoutChange: function() {},\n    cols: { lg: 12, md: 12, sm: 6, xs: 4, xxs: 2 },\n  };\n\n  state = {\n    currentBreakpoint: \"lg\",\n    compactType: \"vertical\",\n    mounted: false,\n    layouts: { lg: [] }\n  };\n\n  componentDidMount() {\n    this.setState({ mounted: true });\n    this.props.setActivePlot(undefined)\n  }\n\n  emptyDashboard = () => {\n    return null\n  }\n\n  noTabsMessage = () => {\n    return null\n  }\n\n  noPlotsMessage = () => {\n    //className=\"attentionLeft\"\n    return <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\", height: \"100%\"}}>\n      <div style={{fontSize: \"5em\", fontWeight: \"bold\"}}>This is the plots dashboard.</div>\n      <div style={{fontSize: \"1.2em\"}}>We would like to display your plots here, but currently you don't seem to have any</div>\n      <div style={{backgroundColor: \"white\",  fontSize: \"2em\", margin: 20, padding: 20, paddingLeft: 50, paddingRight: 50, borderRadius: 70}}> You can try to create one by clicking on your structures</div>\n    </div>\n  }\n\n  static newPlotLayout = (plot, layouts) => {\n    return {\n      x: plot.grid_dims[0]*(layouts.lg.length),\n      y: 2,\n      w: plot.grid_dims[0],\n      h: plot.grid_dims[1],\n      i: plot.id,\n    };\n  }\n\n  generateDOM(layouts, plots, selected, toggleSelect) {\n    return _.map(layouts, function(l, i) {\n      return <div key={plots[i].id} onClick={(e) => e.ctrlKey ? toggleSelect(plots[i].id) : null}> \n        <PlotCard \n          plot={plots[i]} \n          style={selected.includes(plots[i].id) ? selectedPlotStyles : {}}/>\n      </div>\n    });\n  }\n\n  toggleSelected = (plotID) => {\n\n    let selected;\n\n    if (this.state.selected.includes(plotID)){\n      selected = this.state.selected.filter(id => id !== plotID)\n    } else {\n      selected = [...this.state.selected, plotID]\n    }\n\n    this.setState({selected})\n  }\n\n  onBreakpointChange = (breakpoint) => {\n    document.dispatchEvent(new CustomEvent(\"plotResize\", {detail: {id: \"all\"}}))\n  };\n\n  onResizeStop = (layouts, finalL, initL) => {\n    document.dispatchEvent(new CustomEvent(\"plotResize\", {detail: {id: initL.i, higher: finalL.h > initL.h}}))\n  }\n\n  shouldComponentUpdate = (newProps) => {\n\n    if( !this._plotsInLayout ) return true\n\n    const isDifferentTab = newProps.active.tab !== this.props.active.tab\n    let hasDifferentPlots;\n    if (!isDifferentTab){\n      let tab = _.find(this.props.tabs, [\"id\", this.props.active.tab])\n      let newTab = _.find(newProps.tabs, [\"id\", newProps.active.tab])\n\n      if (!tab || !newTab) return true\n      else if (!tab.layouts || !newTab.layouts) return true\n      else if (_.isEqual(tab.layouts, newTab.layouts)) return true\n      else if (! _.isEqual(this._plotsInLayout, newTab.plots)) return true\n\n      hasDifferentPlots = ! _.isEqual(tab.plots, newTab.plots)\n    }\n    \n    return isDifferentTab || hasDifferentPlots\n  }\n\n  onLayoutChange = (layout, layouts) => {\n    this.props.onLayoutChange(layout, layouts);\n\n    PythonApi.setTabLayouts(this.props.active.tab, layouts)\n  };\n\n  onDrop = (elemParams) => {\n    alert(`Element parameters: ${JSON.stringify(elemParams)}`);\n  };\n\n  plotFiles = (acceptedFiles) => {\n    acceptedFiles.forEach(file => {\n        PythonApi.plotFile(file)\n    })\n  }\n\n  getLayout = () => {\n    if (!this.props.active.tab ) return this.noTabsMessage()\n\n    let tab = _.find(this.props.tabs, [\"id\", this.props.active.tab])\n\n    if (!tab) return this.noTabsMessage()\n    if (tab.plots.length === 0) return this.noPlotsMessage()\n    \n    let plots = tab.plots.map(plotID => this.props.plots[plotID])\n\n    plots = plots.filter( plot => plot)\n\n    // Wait for all plots to draw a first layout\n    // THIS IS KEY in order to avoid the layout going crazy\n    if (plots.length !== tab.plots.length) return null\n\n    let layouts = tab.layouts\n\n    if (layouts.lg.length !== plots.length){\n      layouts.lg = plots.map(plot => {\n        let layout = _.find(layouts.lg, [\"i\", plot.id])\n        return layout || PlotDashboard.newPlotLayout(plot, layouts)\n      })\n    }\n\n    this._plotsInLayout = tab.plots\n\n    return (\n      <ResponsiveReactGridLayout\n        {...this.props}\n        layouts={layouts}\n        onBreakpointChange={this.onBreakpointChange}\n        onLayoutChange={this.onLayoutChange}\n        onDrop={this.onDrop}\n        onResizeStop={this.onResizeStop}\n        draggableCancel=\".infolayer, .draglayer, .shapelayer, #scene\" //Avoids plot being dragged when zooming and other drag actions\n        // WidthProvider option\n        measureBeforeMount={false}\n        // I like to have it animate on mount. If you don't, delete `useCSSTransforms` (it's default `true`)\n        // and set `measureBeforeMount={true}`.\n        useCSSTransforms={this.state.mounted}\n        compactType={this.state.compactType}\n        preventCollision={!this.state.compactType}\n        rowHeight={10}\n      >\n        {this.generateDOM(layouts.lg, plots, this.state.selected, this.toggleSelected)}\n      </ResponsiveReactGridLayout>\n    )\n\n  }\n\n  mergePlots = (to) => {\n    PythonApi.mergePlots(this.state.selected, to)\n    this.setState({selected: []})\n  }\n\n  removePlots = () => {\n    this.state.selected.forEach(plotID => PythonApi.removePlot(plotID))\n    this.setState({ selected: [] })\n  }\n\n  movePlots = () => {\n    // For now, we will just move the plots to the next tab\n    // (testing if it works)\n    let iTab = _.findIndex(this.props.tabs, [\"id\", this.props.active.tab ]) + 1\n    if (this.props.tabs.length === iTab) iTab = 0\n\n    this.state.selected.forEach(plotID => PythonApi.movePlot(plotID, this.props.tabs[iTab].id ))\n    this.setState({ selected: [] })\n  }\n\n  renderSelectedManager = () => {\n\n    const nSelected = this.state.selected.length\n\n    if (nSelected === 0) return null\n\n    const availableMerges = [\n      {\"to\": \"multiple\"}, {\"to\": \"subplots\"}, {\"to\": \"animation\"}\n    ]\n\n    return <Paper style={{padding: 10, marginBottom: 10}} elevation={3}>\n      {`You have ${nSelected} plots selected. What do you want to do?`}\n      <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n        {nSelected > 1 ? availableMerges.map(\n          merge => <Button onClick={() => this.mergePlots(merge.to)}>{`Merge as ${merge.to}`}</Button>) \n        : null}\n        <Button onClick={this.removePlots}>Remove</Button>\n        <Button onClick={this.movePlots}>Move to other tab</Button>\n      </div>\n    </Paper>\n  }\n\n  render() {\n\n    // We will reuse some of the tabs hot keys handlers\n    //const handlers = {...this.hotKeysHandler, ..._.pick(tabs.hotKeysHandler, [\"MOVE_TO_NEXT_TAB\", \"MOVE_TO_PREVIOUS_TAB\"]) }\n\n    return (\n        // Note that 40vh here makes no sense, but if I don't set\n            // some (nonsense) height value, the content overflows vertically\n            // (to be solved)\n        <div style={{...this.props.style, display: \"flex\", flexWrap: \"wrap\", height: \"40vh\"}}>\n            {/* <GlobalHotKeys keyMap={PLOTS_HOT_KEYS.global} handlers={handlers}/> */}\n            <StructurePicker \n                style={{ paddingLeft: 15, paddingRight: 15, width: \"10vw\", minWidth: 200, borderRight: \"#ccc solid 1px\"}}\n                structures={this.props.structures} plotables={this.props.plotables}\n            />\n            <div style={{flex: 1, height: \"100%\", display: \"flex\", flexDirection:\"column\"}}>\n                <div style={{padding: 10, flex: 1}} className=\"scrollView\">\n                    {this.renderSelectedManager()}\n                    {this.getLayout()}\n                </div>\n                <FilesInput placeholder=\"Drop a file to plot, or click to select one.\" onChange={this.plotFiles}/>\n            </div>\n        </div>\n      \n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  plots: state.plots,\n  plotables: state.session.plotables,\n  structures: state.session.structures,\n  tabs: state.session.tabs,\n  active: state.active,\n})\n\nconst mapDispatchToProps = {\n  setSessionTabs,\n  setTabPlots,\n  setActivePlot\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withHotKeys(PlotDashboard));","import { FC } from 'react'\n\nimport _ from 'lodash'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TextField } from '@material-ui/core';\nimport { ParamInterface, InputFieldInterface } from '../../../interfaces';\n\nexport interface DropdownProps{\n    id?: string,\n    inputField: InputFieldInterface,\n    value: any[]|any,\n    label?: string,\n    setting?: ParamInterface,\n    onChange: (value: any[]|any) => void,\n    style?: Object\n}\n\nconst Dropdown:FC<DropdownProps> = props => {\n    // Parameters that define the behavior of the dropdown\n    const disableClearable = ! props.inputField.params.isClearable\n    const freeSolo = props.inputField.params.isCreatable\n    const multiple = props.inputField.params.isMulti\n    const options = props.inputField.params.options\n\n    const handleChange = (event:any, value:any, reason: string) => {\n\n        value = getValueFromObj(value)\n\n        props.onChange(value)\n    }\n\n    const getValueFromObj = (obj:any):any => {\n        let value;\n        if (multiple && Array.isArray(obj)) {\n            value = obj.map(getValueFromObj)\n        } else if (typeof obj === 'string'){\n            // A new value is being created\n            value = obj\n        } else if (obj !== null) {\n            value = obj.value\n        }\n\n        return sanitizeValue(value)\n    }\n\n    const getObjFromValue = (value:any):any => {\n        let obj = null;\n        if (multiple && Array.isArray(value)) {\n            obj = value.map(getObjFromValue)\n        } else if (value != null) {\n            obj = _.find(options, { value: value })\n            if (obj == null){\n                // This is a value that is not in the options.\n                obj = {value:value, label:value}\n            }\n        }\n\n        return sanitizeValue(obj)\n    }\n\n    const sanitizeValue = (value: any):any => {\n        if (value === null){\n            value = multiple ? [] : null\n        }\n        return value\n    }\n\n    const value = getObjFromValue(props.value)\n\n    return (\n            <Autocomplete\n                fullWidth\n                freeSolo={freeSolo}\n                multiple={multiple}\n                disableClearable={disableClearable}\n                value={value}\n                onChange={handleChange}\n                getOptionLabel={(option) => option.label}\n                options={options}\n                //helperText={this.props.setting.help}\n                renderInput={(params) => <TextField style={{width: \"100%\"}} {...params} label={props.label} variant=\"outlined\" />}\n            />\n        \n    )\n}\n\nexport default Dropdown;\n","import React, { FC } from 'react'\nimport { connect } from 'react-redux'\nimport { SessionInterface } from '../../interfaces'\n\nimport Dropdown from '../settings/inputFields/Dropdown'\n\ninterface PlotTypePickerProps {\n    value: string[],\n    onChange: (value: string[]) => void,\n    options?: { value: string, label: string }[],\n    session: SessionInterface\n}\n\nconst PlotTypePicker:FC<PlotTypePickerProps> = (props) => {\n    const plotOptions = props.options || props.session.plotOptions\n\n    const inputField = {\n        type: \"dropdown\",\n        params: {\n            options: plotOptions,\n            isClearable: true, isMulti: true,\n        }\n    }\n\n    return (\n        <Dropdown\n            value={props.value}\n            inputField={inputField}\n            onChange={props.onChange}\n            label=\"Plot type\"\n        />\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    session: state.session\n})\n\nexport default connect(mapStateToProps)(PlotTypePicker);","import { FC } from 'react'\nimport { connect } from 'react-redux'\n\nimport Dropdown from '../settings/inputFields/Dropdown'\n\nimport _ from \"lodash\"\nimport { TabInterface } from '../../interfaces'\n\ninterface TabPickerProps {\n    tabs: TabInterface[],\n    active: {\n        tab: string,\n        [key: string]: any\n    },\n    value: string | null,\n    onChange: (value: string) => void,\n}\n\nconst TabPicker:FC<TabPickerProps> = (props) => {\n\n    const options = props.tabs.map( (tab) => ({label: tab.name, value: tab.id }))\n\n    const value = props.value\n    if (value == null){\n        if (props.active.tab && _.find(props.tabs, [\"id\", props.active.tab])){\n            props.onChange(props.active.tab)\n        }\n    }\n\n    const inputField = {\n        type: \"dropdown\",\n        params: {\n            options: options,\n            isClearable: false, isMulti: false,\n        }\n    }\n\n    return (\n        <Dropdown\n            value={value}\n            inputField={inputField}\n            onChange={props.onChange}\n            label=\"Tab\"\n        />\n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    tabs: state.session.tabs,\n    active: state.active\n})\n\nexport default connect(mapStateToProps)(TabPicker);\n","import { FC, useContext } from 'react'\nimport { MdRemove } from 'react-icons/md'\nimport { StructureInterface } from '../../interfaces'\nimport { PickerSelectedContext } from '../structures/pickerContext'\n\ninterface StructureRowProps {\n    structure: StructureInterface,\n    groupActive?: boolean,\n    moveStructToActiveGroup: () => void,\n}\n\nconst StructureRow:FC<StructureRowProps> = (props) => {\n    const { unselect } = useContext(PickerSelectedContext)\n\n    const struct = props.structure\n    const groupActive = props.groupActive\n\n    return (\n        <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", alignItems: \"center\", marginTop: 10, marginBottom: 10}}>\n            <div \n                style={{color: \"darkred\", cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", alignItems:\"center\"}}\n                onClick={() => unselect(\"structures\", struct.id)}>\n                <MdRemove/>\n            </div>\n            <div \n                style={{cursor: groupActive ? \"default\" : \"pointer\", marginRight: 20, marginLeft: 20, padding: 10, backgroundColor: groupActive ? \"whitesmoke\" : \"#ccc\", borderRadius: 3}}\n                onClick={groupActive ? undefined : props.moveStructToActiveGroup}>\n                {struct.name.replace(\".fdf\", \"\")}\n            </div>\n            <div data-tip={struct.path}>{\".../\" + struct.path.split(\"/\").slice(-2,-1)[0]}</div>\n        </div>\n    )\n}\n\nexport default StructureRow;\n","import { FC } from 'react'\nimport Dropdown from '../settings/inputFields/Dropdown'\n\nconst OPTIONS = [\n    {label: \"Plot individually\", value:\"separatePlot\"},\n    {label: \"Merge in single plot\", value:\"jointPlot\"},\n    {label: \"Build animation\", value:\"jointAnimation\"},\n    {label: \"Animation for each\", value:\"separateAnimation\"},\n]\n\ninterface MergeMethodPickerProps {\n    value: string,\n    onChange: (value: string) => void,\n}\n\nconst MergeMethodPicker:FC<MergeMethodPickerProps> = (props) => {\n\n    const value = props.value\n    if (value == null) {\n        props.onChange(OPTIONS[0].value)\n    }\n\n    const inputField = {\n        type: \"dropdown\",\n        params: {\n            options: OPTIONS,\n            isClearable: false, isMulti: false,\n        }\n    }\n\n    return (\n        <Dropdown\n            value={value}\n            inputField={inputField}\n            onChange={props.onChange}\n            label=\"Plotting method\"\n        />   \n    )\n}\n\nexport default MergeMethodPicker","import { FC } from 'react'\nimport PlotTypePicker from './PlotTypePicker'\nimport TabPicker from './TabPicker'\nimport StructureRow from './StructureRow'\nimport MergeMethodPicker from './MergeMethodPicker'\nimport { Grid } from '@material-ui/core'\nimport { StructureInterface } from '../../interfaces'\n\nexport interface StructureGroup {\n    structs: StructureInterface[],\n    active?: boolean,\n    initializingOptions: {\n        tabID: string,\n        plotClasses: string[],\n        mergeMethod: string,\n    }\n}\n\ninterface StructuresGroupProps extends StructureGroup {\n    splitGroup: () => void,\n    removeGroup: () => void,\n    setGroupAsActive: () => void,\n    moveStructToActiveGroup: (id: string) => void,\n    onInitParamChange: (tabID: string, val: any) => void,\n}\n\nconst StructuresGroup:FC<StructuresGroupProps> = (props) => {\n    const { tabID, plotClasses, mergeMethod } = props.initializingOptions\n    const activenessStyles = props.active ? {\n        backgroundColor: \"#ccc\"\n    } : {\n        backgroundColor: \"whitesmoke\"\n    }\n\n    return (\n        <div>\n            <div style={{ display: \"flex\", flexDirection: \"row\", margin: -4 }}>\n                <div className=\"structGroupAction\" style={activenessStyles} onClick={props.splitGroup}>Split</div>\n                <div className=\"structGroupAction\" style={activenessStyles} onClick={props.removeGroup}>Remove</div>\n                {props.active ?\n                    null\n                    :\n                    <div className=\"structGroupAction\" style={activenessStyles} onClick={props.setGroupAsActive}>Mark as receptive</div>\n                }\n                <div style={{ flex: 1 }} />\n            </div>\n            <Grid container spacing={1} style={{ transition: \"all 300ms\", display: \"flex\", flexWrap: \"wrap\", padding: 20, marginTop: 0, marginBottom: 20, borderRadius: 5, borderTopLeftRadius: 0, justifyContent: \"center\", alignItems: \"center\", ...activenessStyles }}>\n                <Grid item sm={12} md={4} lg={3}>\n                    {props.structs.map(struct => <StructureRow structure={struct} groupActive={props.active} moveStructToActiveGroup={() => props.moveStructToActiveGroup(struct.id)} />)}\n                </Grid>\n                <Grid item sm={12} md={4} lg={3}>\n                    <PlotTypePicker value={plotClasses} onChange={(val) => props.onInitParamChange(\"plotClasses\", val)} />\n                </Grid>\n                <Grid item sm={12} md={4} lg={3}>\n                    <TabPicker value={tabID} onChange={(val) => props.onInitParamChange(\"tabID\", val)} />\n                </Grid>\n                <Grid item sm={12} md={4} lg={3}>\n                    <MergeMethodPicker value={mergeMethod} onChange={(val) => props.onInitParamChange(\"mergeMethod\", val)} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default StructuresGroup;","import { FC } from 'react'\nimport { MdRemove } from 'react-icons/md'\n\nimport PlotTypePicker from './PlotTypePicker'\nimport { PlotableInterface } from '../../interfaces'\n\ninterface PlotableRowProps {\n    plotable: PlotableInterface,\n    plots: string[] | undefined,\n    selectPlots: (plots: string[]) => void,\n    unselect: () => void\n}\n\nconst PlotableRow:FC<PlotableRowProps> = (props) => {\n    if (!props.plots && props.plotable.default_plot) {\n        props.selectPlots([props.plotable.default_plot])\n    }\n\n    return (\n        <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", marginTop: 10 }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\" }}>\n                <div style={{ color: \"darkred\", cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }} onClick={props.unselect}>\n                    <MdRemove />\n                </div>\n                <div data-tip={props.plotable.path} style={{ marginLeft: 20 }}>{\"(.../\" + props.plotable.path.split(\"/\").slice(-2, -1)[0] + \")\"}</div>\n                <div style={{ marginLeft: 20, padding: 10, backgroundColor: \"whitesmoke\", borderRadius: 3 }}>\n                    {props.plotable.name}\n                </div>\n            </div>\n            <div style={{ flex: 1, paddingLeft: 20, paddingRight: 20 }}>\n                <PlotTypePicker\n                    options={props.plotable.plots.map(plotOption => ({ value: plotOption, label: plotOption }))}\n                    value={props.plots || [\"\"]}\n                    onChange={props.selectPlots}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default PlotableRow\n\n","import { CSSProperties, FC, useContext, useRef, useState } from 'react'\n\nimport _ from \"lodash\"\n\nimport Card from '@material-ui/core/Card'\n\nimport PythonApi from '../../apis/PythonApi'\n\nimport { connect } from 'react-redux'\nimport { setActiveTab, addPlots, informLoadingPlot, informLoadedPlot } from '../../redux/actions'\nimport StructuresGroup, { StructureGroup } from './StructuresGroup';\nimport { MdClose, MdDone } from 'react-icons/md'\nimport { Button } from '@material-ui/core'\nimport PlotableRow from './PlotableRow'\nimport StructurePicker from '../structures/StructurePicker'\nimport { PickerSelectedContext } from '../structures/pickerContext'\nimport { SessionInterface, StructureInterface, TabInterface } from '../../interfaces'\n\nconst newGroup = (structs: StructureInterface[], tabID: string,  groupParams?: Partial<StructureGroup>): StructureGroup => ({\n    structs: structs,\n    initializingOptions: { tabID: tabID, plotClasses: [], mergeMethod: \"separatePlot\" },\n    ...groupParams\n})\n\nconst cleanUnselectedFromGroups = (groups: StructureGroup[], selectedStructures: string[]) => {\n    /* Removes unselected structures */\n    return groups.reduce((cleanGroups:StructureGroup[], group) => {\n        group = { ...group, structs: group.structs.filter(({ id: structID }) => selectedStructures.includes(structID)) }\n\n        if (group.structs.length > 0) {\n            cleanGroups.push(group)\n        }\n\n        return cleanGroups\n    }, [])\n}\n\nconst markActiveGroup = (iGroup: number, groups: StructureGroup[]) => groups.map((group, i) => ({ ...group, active: i === iGroup }))\n\n\nconst NothingToPlotMessage:FC = (props) => {\n    return <div>\n        <div style={{ color: \"darkred\", fontSize: \"1.3em\", fontWeight: \"bold\" }}>There's nothing to plot currently</div>\n        <div>Select a structure or plotable to begin.</div>\n    </div>\n}\n\ninterface PlotInitializerProps {\n    active: {[key: string]: any},\n    tabs: TabInterface[],\n    session: SessionInterface,\n    style?: CSSProperties\n}\n\nconst PlotInitializer:FC<PlotInitializerProps> = (props) => {\n    const {pickerSelected, nChanges, setPickerSelected, filterSelected, unselect} = useContext(PickerSelectedContext)\n    const [structureGroups, setStructureGroups] = useState<StructureGroup[]>([])\n    const [plotablesPlots, setPlotablesPlots] = useState<{[plotableID: string]: string[]}>({})\n\n    const defaultTabID = props.active.tab ? props.active.tab : props.tabs.length && props.tabs.length > 0 ? props.tabs[0].id : undefined\n\n    // Get the selected objects\n    const selPlotables = filterSelected(\"plotables\", props.session.plotables)\n    const selStructures = filterSelected(\"structures\", props.session.structures)\n    \n    // Group management\n\n    const addGroup = ({ structs }: {structs?: StructureInterface[]}) => {\n        // Add a new group at the end and mark it as active\n        const newStructureGroups = markActiveGroup(structureGroups.length, [...structureGroups, newGroup(structs || [], defaultTabID)])\n\n        setStructureGroups(newStructureGroups)\n    }\n\n    const removeGroup = (iGroup: number) => {\n\n        const group = structureGroups[iGroup]\n\n        if (group.structs.length > 0) {\n            // We need to deactivate all structures in the group, this will automatically update groups\n            unselect(\"structures\", group.structs.map(struct => struct.id))\n        } else {\n            // If no structures in the group, we just delete it\n            let newStructureGroups = structureGroups.filter((g, i) => i !== iGroup)\n\n            // If this was the active group, mark the last one as active\n            if (group.active) {\n                newStructureGroups = markActiveGroup(structureGroups.length - 1, structureGroups)\n            }\n\n            setStructureGroups(newStructureGroups)\n        }\n\n    }\n\n    const splitGroup = (iGroup: number) => {\n        const group = structureGroups[iGroup]\n\n        // Build one group for each structure\n        const splitted = group.structs.map(struct => newGroup([struct], defaultTabID, _.omit(group, [\"structs\"])))\n\n        // Remove the old group\n        let newStructureGroups = structureGroups.filter((g, i) => i !== iGroup)\n\n        // Add the new ones\n        newStructureGroups = [...newStructureGroups.slice(0, iGroup), ...splitted, ...newStructureGroups.slice(iGroup)]\n\n        //If it was the active group, we can't leave all groups as active!\n        if (group.active) newStructureGroups = markActiveGroup(iGroup, newStructureGroups)\n\n        setStructureGroups(newStructureGroups)\n\n    }\n\n    const moveStructToActiveGroup = (structID: string) => {\n\n        //Get the structure\n        const struct = _.find(selStructures, [\"id\", structID])\n        if (!struct) return\n\n        // Remove the structure from its current group and move it to the active group\n        // THIS WILL BE A PROBLEM IF AT SOME POINT THE SAME STRUCTURE IS ALLOWED IN TWO GROUPS AT THE SAME TIME\n        // WE SHOULD THEN SPECIFY THE ORIGIN GROUP!!!!!!!!!!!!!!\n        const newStructureGroups = structureGroups.map(group => {\n\n            let structs = group.active ? [...group.structs, struct] : group.structs.filter(({ id }) => id !== structID)\n\n            return { ...group, structs }\n        })\n\n        setStructureGroups(newStructureGroups)\n\n    }\n\n    const updateGroupInitParams = (iGroup: number, key: string, val: any) => {\n\n        const newStructureGroups = structureGroups.map((group, i) => {\n            return i === iGroup ? { ...group, initializingOptions: { ...group.initializingOptions, [key]: val } } : group\n        })\n\n        setStructureGroups(newStructureGroups)\n    }\n\n    const dismiss = () => setPickerSelected({ structures: [], plotables: [] })\n\n    // When the selected structures change, then update the structure groups\n    const nChangesRef = useRef(0)\n    if (nChangesRef.current !== nChanges) {\n        nChangesRef.current = nChanges\n        let newStructureGroups: StructureGroup[] = [];\n\n        const prevSelectedStructures = structureGroups.reduce((prevStructs: string[], group) => (\n            [...prevStructs, ...group.structs.map(({ id: structID }) => structID)]\n        ), [])\n\n        const newStructs = selStructures.filter(({ id: structID }) => !prevSelectedStructures.includes(structID))\n\n        if (newStructs.length > 0) {\n            if (structureGroups.length === 0) {\n                //In this case build a new group and mark it as active\n                newStructureGroups = markActiveGroup(0, [newGroup(selStructures, defaultTabID)])\n            } else {\n                // Add the new structures to the receptive group\n                newStructureGroups = structureGroups.map((group) => group.active ? { ...group, structs: group.structs.concat(newStructs) } : group)\n            }\n        } else {\n            newStructureGroups = [...structureGroups]\n        }\n\n        newStructureGroups = cleanUnselectedFromGroups(newStructureGroups, pickerSelected.structures)\n        \n\n        //Ensure that there is an active group\n        if (!_.find(newStructureGroups, \"active\")) {\n            newStructureGroups = markActiveGroup(newStructureGroups.length - 1, newStructureGroups)\n        }\n\n        setStructureGroups(newStructureGroups)\n    }\n\n    const getNewPlot = () => {\n        setPickerSelected({ structures: [], plotables: [] })\n\n        //Plot plotables\n        selPlotables.forEach(plotable => {\n            plotablesPlots[plotable.id].forEach(plotType => {\n                PythonApi.newPlot({ tabID: defaultTabID, plotable_path: plotable.path, plot_method: plotType })\n            })\n        })\n\n        //Plot the structures\n        structureGroups.forEach(({ structs, initializingOptions }) => {\n\n            if (initializingOptions.mergeMethod.includes(\"separate\")) {\n\n                const animation = initializingOptions.mergeMethod.includes(\"Animation\")\n\n                structs.forEach(struct => {\n\n                    initializingOptions.plotClasses.forEach(plotClass => {\n\n                        PythonApi.newPlot(\n                            { tabID: initializingOptions.tabID, structID: struct.id, animation, plotClass: plotClass }\n                        )\n\n                    })\n\n\n                })\n            }\n\n        })\n    }\n\n    if (props.tabs.length === 0) return null\n\n    return (\n        <div className=\"plotInitializer\" style={{ ...props.style, display: \"flex\" }}>\n            <StructurePicker\n                structures={props.session.structures}\n                plotables={props.session.plotables}\n                style={{ paddingLeft: 15, paddingRight: 15, width: \"10vw\", minWidth: 200, borderRight: \"#ccc solid 1px\" }}/>\n            <Card\n                style={{ flex: 1, margin: 20, padding: 20, background: \"aliceblue\", overflow: \"visible\" }}>\n                {selStructures.length > 0 ? <div>\n                    <div className=\"sectionHeader\">\n                        Structures\n                    </div>\n                    {structureGroups.map((group, i) => {\n                        return <StructuresGroup\n                            {...group}\n                            onInitParamChange={(key: string, val: any) => updateGroupInitParams(i, key, val)}\n                            setGroupAsActive={() => setStructureGroups(markActiveGroup(i, structureGroups))}\n                            removeGroup={() => removeGroup(i)}\n                            splitGroup={() => splitGroup(i)}\n                            moveStructToActiveGroup={moveStructToActiveGroup}\n                        />\n                    })}\n                    <div onClick={() => addGroup({})}>New Group</div>\n                </div> : null}\n\n                {selPlotables.length > 0 ? <div className=\"sectionHeader\">\n                    Plotables\n                </div> : null}\n\n                <div>\n                    {selPlotables.map(plotable => <PlotableRow \n                        plotable={plotable}\n                        plots={plotablesPlots[plotable.id]}\n                        selectPlots={(newPlots: string[]) => setPlotablesPlots({...plotablesPlots, [plotable.id]: newPlots})}\n                        unselect={() => unselect(\"plotables\", plotable.id)} \n                    />)}\n                </div>\n\n\n                {[...selPlotables, ...selStructures].length === 0 ? <NothingToPlotMessage/> : null}\n\n                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\", paddingTop: 20 }}>\n\n                    <Button\n                        style={{ marginRight: 20 }}\n                        onClick={dismiss}\n                        endIcon={<MdClose />}\n                    >\n                        Dismiss\n                    </Button>\n\n                    <Button\n                        style={{ marginLeft: 20 }}\n                        onClick={getNewPlot}\n                        endIcon={<MdDone />}\n                    >\n                        Initialize plots\n                    </Button>\n\n                </div>\n\n            </Card>\n        </div>\n    )\n\n}\n\nconst mapStateToProps = (state: any) => ({\n    tabs: state.session.tabs,\n    active: state.active,\n})\n\nconst mapDispatchToProps = {\n    setActiveTab,\n    addPlots,\n    informLoadingPlot,\n    informLoadedPlot,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotInitializer);\n","import { FC } from 'react'\nimport Switch from '@material-ui/core/Switch'\nimport { InputFieldProps } from '../InputField';\n\nconst SwitchInput:FC<InputFieldProps<boolean>> = props => {\n    const id = props.id || (props.setting ? props.setting.key : \"\")\n    return (\n        <div className=\"container\">\n            <div style={{paddingBottom: 10}}>{props.label}</div>\n            <Switch\n                id={id}\n                checked={props.value}\n                onChange={(e) => props.onChange(e.target.checked) }\n                {...(props.inputField ? props.inputField.params : undefined)}/>\n        </div>\n    )\n}\n\nexport default SwitchInput;\n","import { FC, useState } from 'react'\nimport { ChromePicker } from 'react-color';\nimport { InputFieldProps } from '../InputField';\n\nconst ColorPicker:FC<InputFieldProps<string>> = (props) => {\n    const [tempcolor, setTempcolor] = useState<string | undefined>(undefined)\n    const [showColorPicker, setShowColorPicker] = useState(false)\n\n    let colorPicker = showColorPicker ? (\n        <div style={{position: \"absolute\", bottom: 60}}>\n            <ChromePicker\n                color={tempcolor || props.value || 'black'}\n                onChange={(color) => {setTempcolor(color.hex)}}\n                onChangeComplete={(color) => {props.onChange(color.hex); setTempcolor(undefined)}}\n                {...(props.inputField ? props.inputField.params : undefined)}/>\n        </div>\n    ) : null;\n\n    return (\n        <div style={{position: \"relative\",display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"center\"}}>\n            <div style={{paddingBottom: 10}}>{props.label}</div>\n            <div \n                className=\"MuiPaper-elevation3\"\n                onClick={() => setShowColorPicker(!showColorPicker)}\n                style={{width: 30, height: 30, borderRadius: 30, background: props.value}}/>\n            \n            {colorPicker}\n        </div>\n    )\n\n}\n\nexport default ColorPicker;\n","import { FC } from 'react'\n\nimport { Slider } from '@material-ui/core'\nimport { InputFieldProps } from '../InputField'\n\nconst RangeSlider:FC<InputFieldProps<number|number[]>> = props => {\n\n    const params = props.inputField ? props.inputField.params : {}\n    let { min, max, step, marks} = params\n    marks = Array.isArray(marks) ? marks : undefined\n\n    const value = props.value || [0,0]\n\n    return (\n        <div className=\"container\">\n            <div style={{paddingBottom: 10}}>{props.label}</div>\n            <Slider\n                getAriaLabel={() => props.label}\n                value={value}\n                onChange={(event, value) => props.onChange(value)}\n                valueLabelDisplay=\"auto\"\n                min={min} max={max} step={step}\n                marks={marks}\n            />\n        </div>\n    )\n\n}\n\nexport default RangeSlider;\n","import { ChangeEvent, FC } from 'react'\nimport { InputFieldProps, number } from '../InputField'\nimport { TextField } from '@material-ui/core'\n\nconst Range:FC<InputFieldProps<(string|number|null)[]>> = props => {\n    const value = props.value != null ? props.value : [\"\", \"\"]\n\n    const handleChange = (\n        e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement >, \n        i:number, oldValue: (string|number|null)[]\n    ) => {\n        const newVal = number(e.target.value)\n        let valid = true;\n        if (typeof newVal === \"number\"){\n            if (i === 0 && typeof oldValue[1] === \"number\") valid = newVal <= oldValue[1]\n            if (i === 1 && typeof oldValue[0] === \"number\") valid = newVal >= oldValue[0]\n        }\n\n        if (valid) {\n            const finalVal = i === 0 ? [newVal, oldValue[1]] : [oldValue[0], newVal]\n            props.onChange(finalVal)\n        }\n    }\n\n    return (\n        <div>\n            <div style={{paddingBottom: 10}}>{props.label}</div>\n            <div style={{display: 'flex'}}>\n                <TextField\n                    style={{marginRight: 30, flex:1}}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    label=\"min\"\n                    value={value[0]}\n                    onChange={(e) => handleChange(e, 0, value)}\n                    {...(props.inputField ? props.inputField.params : undefined)}/>\n                <TextField\n                    style={{marginLeft: 30, flex:1}}\n                    type=\"number\"\n                    variant=\"outlined\"\n                    label=\"max\"\n                    value={value[1]}\n                    onChange={(e) => handleChange(e, 1, value)}\n                    {...(props.inputField ? props.inputField.params : undefined)}/>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Range;\n","import { FC } from 'react'\nimport { number } from '../InputField'\nimport TextField from '@material-ui/core/TextField'\nimport { InputFieldInterface, ParamInterface } from '../../../interfaces'\n\ninterface NumericProps {\n    id?: string,\n    inputField?: InputFieldInterface,\n    value: number | string,\n    label?: string,\n    setting?: ParamInterface,\n    onChange: (value: number | string | null) => void,\n    style: Object\n}\n\nconst Numeric:FC<NumericProps> = props => {\n    const additionalProps = props.inputField ? props.inputField.params : {}\n    const value = props.value === undefined ? \"\" : props.value\n\n    return (\n        <div>\n            <TextField\n                type=\"number\"\n                label={props.label}\n                value={value}\n                onChange={(e) => props.onChange( number(e.target.value) )}\n                style = {props.style}\n                variant=\"outlined\"\n                inputProps={additionalProps}/>\n        </div>\n    )\n}\n\nexport default Numeric;\n","import { FC } from 'react'\nimport NumericInput from './Numeric'\n\nimport _ from \"lodash\"\nimport { InputFieldProps } from '../InputField'\nimport { InputFieldInterface } from '../../../interfaces'\n\ninterface ArrayInputProps extends InputFieldProps<number[]> {\n    inputField: InputFieldInterface\n}\n\nconst ArrayInput:FC<ArrayInputProps> = (props) => {\n\n    const changeValue = (newVal:string|number|undefined|null, i:number) => {\n        let value = _.cloneDeep(props.value)\n\n        if (typeof newVal === \"string\" || newVal === null || newVal === undefined) return\n\n        if(!value){\n            value = handleNone()\n        }\n\n        value[i] = newVal\n\n        props.onChange(value)\n    }\n\n    const handleNone = () => {\n        return Array((props.inputField.params.shape || [1])[0]).fill(null)\n    }\n\n    //Params to pass to numeric inputs\n    const orientationStyles = props.inputField.params.vertical ? {\n        marginLeft: 20, marginRight: 20, marginBottom: 0, width: 70\n    } : {\n        marginLeft: 5, marginRight: 5, marginBottom: 0, width: 100\n    }\n    const inputStyle = { ...orientationStyles, textAlign: \"center\"}\n\n    let value = props.value\n\n    if (!value){\n        value = handleNone()\n    }\n\n    return (\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <div style={{paddingBottom: 10}}>{props.label}</div>\n            <div style={{display: \"flex\", flexDirection: props.inputField.params.vertical ? \"column\" : \"row\", justifyContent: \"center\", alignItems: \"center\"}} className=\"arrayContainer\">\n                {value.map((val, i) => <NumericInput key={i} value={val} onChange={(val) => changeValue(val, i)} style={inputStyle}/>)}\n            </div>  \n        </div>\n    )\n}\nexport default ArrayInput;\n","import { FC,  } from 'react'\nimport InputField, { InputFieldProps, MasterInputFieldProps } from \"../InputField\"\n\nimport { IconButton } from '@material-ui/core'\nimport { AiOutlineDelete } from 'react-icons/ai'\nimport { MdDragHandle, MdPlaylistAdd } from \"react-icons/md\"\nimport {\n    SortableContainer,\n    SortableElement,\n    SortableHandle,\n    SortEnd,\n    arrayMove\n} from 'react-sortable-hoc';\nimport { ParamInterface } from '../../../interfaces'\n\nconst DragHandle = SortableHandle(() => <MdDragHandle size={20} color=\"gray\"/>);\n\ninterface SortableItemProps extends MasterInputFieldProps{\n    sortable: boolean,\n    remove: () => void,\n}\n\nconst SortableItem = SortableElement((props: SortableItemProps) => (\n    <div className=\"listitem\">\n        {props.sortable ? <DragHandle/> : null}\n        <InputField {...props} />\n        {props.remove ? <IconButton className=\"removebutton\" onClick={props.remove}><AiOutlineDelete color=\"red\"/></IconButton> : null }\n    </div>\n));\n\ninterface SortableContainerProps {\n    children: any[]\n}\n\nconst SortableList = SortableContainer((props: SortableContainerProps) => {\n    return <div className=\"listcontainer\">{props.children}</div>;\n});\n\nconst handleNone = () => []\n\nconst sanitizeVal = (value: any):any[] => {\n\n    if(!value){\n        return handleNone()\n    } else if (! Array.isArray(value)){\n        return [value]\n    } else {\n        return value\n    }\n}\n\ninterface ListInputProps extends InputFieldProps<Object[]> {\n    setting: ParamInterface\n}\n\nconst ListInput:FC<ListInputProps> = props => {\n    let value = sanitizeVal(props.value)\n\n    const addItem = () => {\n        props.onChange([...sanitizeVal(props.value), props.setting.default || null])\n    }\n\n    const removeItem = (i: number) => {\n        props.onChange(sanitizeVal(props.value).filter((val, index) => index !== i))\n    }\n\n    const changeValue = (newVal:any, i: number) => {\n        let value = [...sanitizeVal(props.value)]\n\n        value[i] = newVal\n\n        props.onChange(value)\n    }\n\n    const onSortEnd = (args: SortEnd) => {\n\n        props.onChange(\n            arrayMove(sanitizeVal(props.value), args.oldIndex, args.newIndex)\n        )\n\n    };\n\n    return (\n        <div className=\"container\" style={props.style}>\n            <div className=\"namediv\" style={{ paddingBottom: 10 }}>{props.setting.name}</div>\n            <SortableList onSortEnd={onSortEnd} useDragHandle>\n                {value.map((val, i) => (\n                    <SortableItem \n                        key={`item-${i}`} index={i} value={val} \n                        onValueChange={(val: any) => changeValue(val, i)} \n                        remove={() => removeItem(i)}\n                        sortable={props.setting.inputField.params.sortable}\n                        setting={props.setting.inputField.params.itemInput} />\n                ))}\n            </SortableList>\n            <IconButton \n                data-tip=\"Add a new item\"\n                onClick={addItem}>\n                    <MdPlaylistAdd color=\"green\" />\n            </IconButton>\n        </div>\n    )\n}\n\nexport default ListInput;","import { FC, MouseEvent } from 'react'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { changeSettings } from \"../../redux/actions\"\n\n/*  All the different input fields */\nimport TextInput from './inputFields/TextInput';\nimport Switch from './inputFields/Switch';\nimport Dropdown from './inputFields/Dropdown';\nimport ColorPicker from './inputFields/ColorPicker';\nimport RangeSlider from './inputFields/RangeSlider';\nimport Range from './inputFields/Range';\nimport Numeric from './inputFields/Numeric';\nimport ArrayInput from './inputFields/Array';\nimport ListInput from './inputFields/List';\nimport CreatableDropdown from './inputFields/CreatableDropown';\nimport DictInput from './inputFields/DictInput';\nimport CreatableDictInput from './inputFields/CreatableDict';\n\nimport { InputFieldInterface, ParamInterface } from '../../interfaces';\n\nexport const INPUT_FIELDS:any = {\n    textinput: TextInput,\n    bool: Switch,\n    options: Dropdown,\n    \"creatable options\": CreatableDropdown,\n    dict: DictInput,\n    \"creatable dict\": CreatableDictInput,\n    color: ColorPicker,\n    rangeslider: RangeSlider,\n    range: Range,\n    number: Numeric,\n    vector: ArrayInput,\n    list: ListInput,\n}\n\nexport const number = (value: string | number) : (string | number | null) => {\n    if (typeof value === \"string\") {\n        if (value === \"\") return null\n        if ([\"-\", \".\"].includes(value)) return value\n    }\n    return Number(value)\n}\n\nexport const changeSettingValue = (\n    newValue: any, \n    props: MasterInputFieldProps\n) => {\n\n    if (props.onValueChange){\n        props.onValueChange(newValue)\n    } else if (props.changeSettings && props.onSettingChangeType && props.onSettingChangeExtraParams) {\n        props.changeSettings(props.onSettingChangeType, props.setting.key, newValue, props.onSettingChangeExtraParams)\n    } else {\n        console.error(\"Wrong usage of changeSettingValue\")\n    }\n\n}\n\nexport interface MasterInputFieldProps {\n    setting: ParamInterface,\n    value: any,\n    onValueChange?: (value: any) => void,\n    changeSettings?: (type: string, key: string, value: any, extraParams: any) => void,\n    onSettingChangeType?: string,\n    onSettingChangeExtraParams?: any,\n    style?: any\n}\n\nexport interface InputFieldProps<T> {\n    id?: string,\n    inputField?: InputFieldInterface,\n    setting?: ParamInterface,\n    value: T,\n    label: string,\n    onChange: (value: T) => void,\n    style?: Object\n}\n\nconst InputField:FC<MasterInputFieldProps> = (props) => {\n\n    let inputField = props.setting.inputField\n\n    // Get the input field that we need\n    const InputComponent = INPUT_FIELDS[inputField.type]\n    \n    if (!InputComponent) return null\n\n    const label = props.setting ? props.setting.name : \"\"\n    const fieldLayout = <InputComponent\n        {...props}\n        label={label}\n        inputField={inputField}\n        onChange={(value: any) => changeSettingValue(value, props)}\n    />\n\n    const handleClick = (e:MouseEvent) => {\n        if (e.ctrlKey) {\n            e.stopPropagation()\n            changeSettingValue(props.value == null ? props.setting.default : null, props)\n        }\n    }\n\n    let tooltipParams = {\n        \"data-tip\": (props.setting.help ? props.setting.help + \"<br>\" : \"\") + \"Default: \" + (props.setting.default || \"None\"),\n        \"data-multiline\": true,\n        \"data-effect\": \"solid\",\n        \"data-place\": inputField.type === \"color\" ? \"bottom\" : \"top\", \n    }\n\n    let className = `SISL_INPUTFIELD SISL_INPUTFIELD_${inputField.type.replace(/ /g, \"_\")} SISL_SETTING_${props.setting.key} `\n    if (props.value == null) className = className + \" inputvalue_None\"\n\n    return <div\n        className={className}\n        onClick={handleClick}\n        style={props.style}\n        {...tooltipParams}>\n            {/* <div>{props.setting.key}</div> */}\n            {fieldLayout}\n        </div>\n\n\n}\n\nconst mapStateToProps = (state: any) => ({\n    browser: state.browser\n})\n\nconst mapDispatchToProps = {\n    changeSettings,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);","import { FC } from 'react'\n\nimport Dropdown, {DropdownProps} from './Dropdown'\n\nconst CreatableDropdown:FC<DropdownProps>= (props) => {\n    props.inputField.params.isCreatable = true\n    return <Dropdown {...props}/>\n}\n\nexport default CreatableDropdown;\n","import { FC } from 'react'\n\nimport InputField, { InputFieldProps } from '../InputField';\nimport { ParamInterface } from '../../../interfaces';\n\ninterface Value {\n    [key: string]: any\n}\n\ninterface DictInputProps extends InputFieldProps<Value> {\n    setting: ParamInterface\n}\n\nconst DictInput:FC<DictInputProps> = props => {\n\n    const changeSettingValue = (paramKey:string, paramValue:any) => {\n        props.onChange({ ...props.value, [paramKey]: paramValue })\n    }\n\n    const value = props.value || {}\n        const fields = props.setting.inputField.fields || []\n\n        return (\n            <div className=\"container\" style={props.style}>\n                <div className=\"namediv\">{props.setting.name}</div>\n                <div className=\"fieldscontainer\">\n                    {fields.map((field:ParamInterface) => <InputField\n                        //id={field.key}\n                        key={field.key}\n                        setting={field}\n                        value={value[field.key]}\n                        onValueChange={(val) => changeSettingValue(field.key, val)} />)}\n                </div>\n            </div>\n            \n        )\n\n\n}\n\nexport default DictInput;","import { FC, useState } from 'react'\n\nimport _ from 'lodash'\nimport Dropdown from './Dropdown'\n\nimport { AiOutlineDelete } from 'react-icons/ai'\nimport { MdPlaylistAdd } from 'react-icons/md'\nimport { IconButton } from '@material-ui/core'\nimport InputField, { InputFieldProps } from '../InputField'\nimport { ParamInterface } from '../../../interfaces'\n\ninterface Value {\n    [key: string]: any\n}\n\ninterface CreatableDict extends InputFieldProps<Value> {\n    setting: ParamInterface\n}\n\nconst CreatableDictInput:FC<CreatableDict> = props => {\n    const [new_cat_value, setNewCatValue] = useState<string | undefined>(undefined)\n\n    const label = props.label || (props.setting ? props.setting.name : \"\")\n\n    const fields = props.setting.inputField.fields || []\n    const creatable_fields = fields\n\n    let value = props.value || {}\n\n    const getParam = (key: string) => {\n        return _.find(props.setting.inputField.fields || [], [\"key\", key])\n    }\n\n    const onItemChange = (key:string, value:any) => {\n        props.onChange({\n            ...props.value, [key]: value\n        })\n    }\n\n    const addNewItem = (key: string | undefined) => {\n        if (!key) return\n\n        const param = getParam(key)\n        if (!param) return\n\n        onItemChange(key, param.default)\n    }\n\n    const deleteItem = (key: string) => {\n        props.onChange(_.omit(props.value, key))\n    }\n\n    const renderItem = (key: string, value: any) => {\n        // Find the appropiate input field for this key\n        const param = getParam(key)\n\n        if (!param) return null\n\n        // And render it\n        return <fieldset>\n            <legend style={{\n                paddingLeft: 10, paddingRight: 10, paddingTop: 2, paddingBottom: 2, borderRadius: 3,\n                backgroundColor: \"white\"\n            }}>{param.name}</legend>\n            <InputField\n                {...props}\n                setting={{...param, name: \"\"}}\n                value={value}\n                onValueChange={(value) => onItemChange(key, value)}\n            />\n            <IconButton onClick={() => deleteItem(key)}><AiOutlineDelete color=\"red\" /></IconButton>\n        </fieldset>\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"namediv\">\n                {label}\n            </div>\n            <div className=\"listcontainer\">\n                {Object.keys(value).map(key => renderItem(key, value[key]))}\n            </div>\n            <div className=\"newfielddiv\">\n                <Dropdown\n                    value={new_cat_value}\n                    onChange={(val) => setNewCatValue(val)}\n                    label=\"Add a new selection...\"\n                    inputField={{\n                        type: \"\",\n                        params: {\n                            options: creatable_fields.map((param: {name:string, key:string}) => ({ label: param.name, value: param.key })),\n                        }\n                    }} />\n                <IconButton onClick={() => addNewItem(new_cat_value)}><MdPlaylistAdd color=\"green\" /></IconButton>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default CreatableDictInput","import { FC, useState } from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/core/Icon'\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport { FaAngleRight } from 'react-icons/fa'\nimport { MdRestore } from 'react-icons/md'\n\nimport InputField from \"./InputField\"\n\nimport parse from 'html-react-parser';\nimport _ from \"lodash\"\nimport { Formik } from 'formik'\n\nimport { ParamGroupInterface, ParamInterface} from '../../interfaces';\n\ninterface SettingsFormProps {\n    paramGroup: ParamGroupInterface,\n    groupedParams: {\n        [key:string]: ParamInterface[] | undefined\n    },\n    index: number,\n    settings: { [key:string]: any },\n    submitSettings: (settings: {[key:string]: any}) => void,\n    undoSettings: () => void,\n    style?: Object,\n}\n\nconst SettingsForm:FC<SettingsFormProps> = props => {\n    const [changedFields, setChangedFields] = useState<string[]>([])\n\n    const paramGroup = props.paramGroup;\n    const groupedParams = props.groupedParams;\n\n    const groupKey = paramGroup.key ? paramGroup.key : \"null\";\n    const settingsGroup = groupedParams[groupKey]\n\n    if (!settingsGroup) return null\n\n    const subGrouped = _.groupBy(settingsGroup, \"subGroup\")\n\n    const nullSubGroup = {key: \"null\", name: null, icon: \"\", description:\"\"}\n    const subGroups = paramGroup.subGroups ? [nullSubGroup,  ...paramGroup.subGroups] : [nullSubGroup]\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={props.settings}\n            onSubmit={(values) => {\n                props.submitSettings(Object.fromEntries(\n                    Object.entries(values).filter(([key, value]) => changedFields.includes(key))\n                ))\n            }}\n            >\n                {({values, handleChange, handleSubmit, setFieldValue, resetForm}) => (\n                    <form className={`SISL_INPUTGROUP SISL_INPUTGROUP_${paramGroup.key}`} onSubmit={handleSubmit}>\n                        <blockquote style={{ textAlign: \"left\" }}>\n                            {parse(paramGroup.description)}\n                        </blockquote>\n                        <div className=\"subgroupscontainer\">\n                            {subGroups.map(({key, name}) => {\n\n                                if ( ! subGrouped[key] ) return null\n\n                                return <div key={key} className={`SISL_INPUTSUBGROUP SISL_INPUTSUBGROUP_${key}`}>\n                                    <div className=\"namediv\" style={{paddingBottom: 20, fontWeight:\"bold\", fontSize: \"1.3em\", textAlign: \"left\"}}>{name}</div>\n                                    <div className=\"fieldscontainer\">{ subGrouped[key].map(setting => {\n\n                                    if (!setting.inputField) return null\n\n                                    return <InputField \n                                            key={setting.key}\n                                            onValueChange={(value) => {\n                                                setChangedFields([...changedFields, setting.key])\n                                                setFieldValue(setting.key, value)\n                                            }}\n                                            setting={setting} \n                                            value={values[setting.key]} />\n                                    })}\n                                    </div>\n                                </div>\n                            })}\n                        </div>\n                        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"space-around\" }}>\n                            {/* <Button\n                                onClick={props.undoSettings}\n                                data-tip=\"This will roll back to previous settings.<br> IT AFFECTS ALL GROUPS OF PARAMETERS, not only this one.\"\n                                className=\"orange\"\n                                style={{ margin: 20 }}>\n                                <FaAngleLeft />Previous settings\n                            </Button> */}\n\n                            <Button\n                                onClick={() => resetForm()}\n                                data-tip=\"This will restore the settings to the current ones\"\n                                style={{ margin: 20 }}><MdRestore />Restore</Button>\n\n                            <Button\n                                type=\"submit\"\n                                data-tip=\"This will change the settings and will update everything accordingly.<br> IT ONLY AFFECTS THIS GROUP OF SETTINGS, not all settings\"\n                                style={{ margin: 20 }}>\n                                Submit settings<FaAngleRight />\n                            </Button>\n                        </div>\n                    </form>\n                )}\n        </Formik>\n    )\n}\n\ninterface SettingGroupsCollapseProps extends SettingsFormProps {}\n\nconst SettingGroupsCollapse:FC<SettingGroupsCollapseProps> = props => {\n    const paramGroup = props.paramGroup;\n\n    const groupKey = paramGroup.key ? paramGroup.key : \"null\";\n\n    return (\n        <MuiExpansionPanel\n            key={groupKey}>\n            <MuiExpansionPanelSummary style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <Icon>{paramGroup.icon}</Icon>\n                <span style={{paddingLeft: 10}}>{paramGroup.name}</span>\n            </MuiExpansionPanelSummary>\n            <MuiExpansionPanelDetails>\n                <SettingsForm {...props} />\n            </MuiExpansionPanelDetails>\n        </MuiExpansionPanel> \n    )\n}\n\ninterface SettingsContainerProps {\n    className?: string,\n    settings: {[key:string]: any}\n    params: ParamInterface[],\n    paramGroups: ParamGroupInterface[],\n    submitSettings: (settings: {[key:string]: any}) => void,\n    undoSettings: () => void,\n    style?: Object,\n}\n\nconst SettingsContainer:FC<SettingsContainerProps> = props => {\n    let groupedParams = _.groupBy(props.params, \"group\")\n\n    return (\n        <div style={props.style} className={props.className}>\n            {props.paramGroups.map((paramGroup, iParamGroup) => (\n                <SettingGroupsCollapse\n                    key={iParamGroup} \n                    index={iParamGroup}\n                    paramGroup={paramGroup} \n                    groupedParams={groupedParams}\n                    {...props}\n                    />\n            )) }        \n        </div>\n    )\n}\n\nexport default SettingsContainer;\n\n","import { FC } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport ReactTooltip from \"react-tooltip\"\n\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Components\nimport PlotCard from '../components/plots/PlotCard'\nimport SettingsContainer from '../components/settings/SettingsContainer'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { selectActivePlot } from '../redux/reducers'\nimport { PlotInterface, SessionInterface } from '../interfaces';\n\ninterface PlotTweakingProps {\n    plots: {[key: string]: PlotInterface},\n    activePlot: PlotInterface,\n    session: SessionInterface,\n    browser: any,\n    style: {[key: string]: any},\n    goto?: (path: string) => void,\n}\n\nconst PlotTweaking:FC<PlotTweakingProps> = (props) => {\n    const activePlot = props.activePlot\n\n    if (! activePlot ) return null\n    const plotSettings = activePlot.settings\n\n    console.warn(activePlot)\n\n    let setsCont = <SettingsContainer\n                        className={\"SISL_SETTING_PLOT SISL_SETTING_PLOTCLASS_\" + activePlot.plotClass} \n                        settings={plotSettings}\n                        params={activePlot.params}\n                        paramGroups={activePlot.paramGroups}\n                        submitSettings={(settings) => PythonApi.updatePlotSettings(activePlot.id, settings)}\n                        undoSettings={() => PythonApi.undoPlotSettings(activePlot.id)}/>\n    \n    return (\n        <div style={{...props.style, }}>\n            <Grid container style={{paddingLeft: \"20px\"}}>\n                <Grid item sm={12} md={4} style={{height:\"90vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems:\"center\"}}>\n                    <PlotCard plot={activePlot} style={{height: \"80vh\"}}/>\n                </Grid>\n                <Grid item sm={12} md={8} style={{ padding: 20, display: \"flex\", flexDirection: \"column\"}} >\n                    {props.browser.mediaType === \"infinity\" ? <div className=\"scrollView\" style={{ maxHeight: \"90vh\"}}>{setsCont}</div> : setsCont}\n                </Grid>\n            </Grid>\n            <ReactTooltip effect=\"solid\" multiline disable={props.session.settings ? !props.session.settings.showTooltips : false}/>  \n        </div>\n        \n    )\n}\n\nconst mapStateToProps = (state: {[key:string]: any}) => ({\n    plots: state.plots,\n    activePlot: selectActivePlot(state),\n    session: state.session,\n    browser: state.browser\n})\n\nexport default connect(mapStateToProps)(PlotTweaking);\n","import { FC } from 'react'\nimport ReactMarkDown from \"react-markdown\"\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Button, ExpansionPanelActions } from '@material-ui/core'\nimport { ShortCutInterface } from '../../interfaces'\n\ninterface MethodProps {\n    sequence: string,\n    shortcut: ShortCutInterface,\n    applyMethod: () => void,\n}\n\nconst Method:FC<MethodProps> = props => {\n    return (\n        <ExpansionPanel>\n            <ExpansionPanelSummary\n                style={{display: \"flex\", cursor: \"pointer\", justifyContent: \"space-between\", alignItems: \"center\"}}>\n                <span style={{color: \"gray\", marginRight: 10}}>{props.sequence}</span>\n                <span style={{fontWeight: \"bold\"}}>{props.shortcut.name}</span>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails style={{fontSize: 13}}>\n                <ReactMarkDown>{props.shortcut.description}</ReactMarkDown>\n            </ExpansionPanelDetails>\n            <ExpansionPanelActions>\n                <Button onClick={props.applyMethod}>APPLY METHOD</Button>\n            </ExpansionPanelActions>\n        </ExpansionPanel>\n    )\n}\n\nexport default Method;\n","import { FC } from 'react'\nimport { ShortcutsInterface } from '../../interfaces';\nimport Method from './Method'\n\ninterface MethodsProps {\n    applyMethod: (key: string) => void,\n    shortcuts: ShortcutsInterface\n}\n\nconst Methods:FC<MethodsProps> = props => {\n    return (\n        <div className=\"scrollView\" style={{textAlign: \"left\", borderRadius: 3, maxHeight: \"90vh\"}}>\n            {Object.keys(props.shortcuts).map((sequence) => \n                <Method \n                    sequence={sequence} shortcut={props.shortcuts[sequence]}\n                    applyMethod={() => props.applyMethod(sequence)}/>\n            )}\n        </div>\n    )\n}\n\nexport default Methods;\n","import { FC } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport ReactTooltip from \"react-tooltip\"\n\n//--Components\nimport PlotCard from '../components/plots/PlotCard'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport PythonApi from '../apis/PythonApi';\nimport Methods from '../components/pythonMethods/Methods'\nimport { selectActivePlot } from '../redux/reducers'\nimport { PlotInterface, SessionInterface } from '../interfaces';\n\ninterface PlotMethodsProps {\n    activePlot: PlotInterface,\n    session: SessionInterface,\n    style: {[key: string]: any},\n}\n\nconst PlotMethods:FC<PlotMethodsProps> = props => {\n    return (\n        <div style={{...props.style, paddingLeft: \"20px\"}}>\n            {/* <GlobalHotKeys keyMap={PLOT_TWEAKING_HOT_KEYS.global} handlers={this.hotKeysHandlers}/> */}\n            <Grid container>\n                <Grid item sm={12} md={4} style={{ height: \"90vh\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                    <PlotCard plot={props.activePlot} style={{ height: \"80vh\" }} />\n                </Grid>\n                <Grid item sm={12} md={8} style={{ padding: 20, display: \"flex\", flexDirection: \"column\" }} >\n                    <Methods \n                        shortcuts={props.activePlot.shortcuts}\n                        applyMethod={(key:string) => PythonApi.callPlotShortcut(props.activePlot.id, key)}/>\n                </Grid>\n            </Grid>\n            <ReactTooltip multiline disable={props.session.settings ? !props.session.settings.showTooltips : false} />   \n        </div>\n        \n    )\n}\n\nconst mapStateToProps = (state: any) => ({\n    activePlot: selectActivePlot(state),\n    session: state.session,\n})\n\nexport default connect(mapStateToProps)(PlotMethods);\n","\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { selectActivePlot } from '../redux/reducers'\n\nimport React, { Component } from 'react';\nimport plotly from 'plotly.js/dist/plotly';\nimport PlotlyEditor from 'react-chart-editor';\nimport 'react-chart-editor/lib/react-chart-editor.css';\n\n// const dataSources = {\n//     col1: [1, 2, 3], // eslint-disable-line no-magic-numbers\n//     col2: [4, 3, 2], // eslint-disable-line no-magic-numbers\n//     col3: [17, 13, 9], // eslint-disable-line no-magic-numbers\n// };\n\n// const dataSourceOptions = Object.keys(dataSources).map(name => ({\n//     value: name,\n//     label: name,\n// }));\n\nconst config = { editable: true };\n\nclass PlotEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        const activePlot = props.activePlot\n        this.state = activePlot.figure;\n    }\n\n    hotKeysHandlers = {\n        UNDO_SETTINGS: () => this.undoSettings(),\n        SUBMIT_ALL_SETTINGS: () => this.submitSettings(\"all\")\n    }\n\n    submitSettings = (settings) => {\n\n        if (settings === \"all\") {\n            settings = this.props.activePlot.unsubmittedSettings\n        }\n\n        PythonApi.updatePlotSettings(this.props.activePlot.id, settings)\n\n    }\n\n    componentWillUnmount(){\n\n        PythonApi.updateFigure(this.props.activePlot.id, {...this.state, overwrite: true})\n        // this.props.addPlots({\n        //     [this.props.activePlot.id]: {\n        //         ...this.props.activePlot,\n        //         figure: this.state\n        //     }\n        // })\n    }\n\n    undoSettings = () => {\n\n        PythonApi.undoPlotSettings(this.props.activePlot.id)\n\n    }\n\n    render() {\n\n        const activePlot = this.props.activePlot\n\n        if (!activePlot) return null\n\n        return (\n            // Note that 40vh here makes no sense, but if I don't set\n            // some (nonsense) height value, the content overflows vertically\n            // (to be solved)\n            <div style={{...this.props.style, height: \"40vh\"}}>\n                <PlotlyEditor\n                data={this.state.data}\n                layout={this.state.layout}\n                config={config}\n                frames={this.state.frames}\n                plotly={plotly}\n                style={{...this.props.style}}\n                onUpdate={(data, layout, frames) =>\n                    this.setState({ data, layout, frames })\n                }\n                useResizeHandler\n                debug\n                advancedTraceTypeSelector\n            />\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    activePlot: selectActivePlot(state),\n})\n\nexport default connect(mapStateToProps, null)(PlotEditor);","import { FC, FocusEvent } from 'react'\n\nimport { MdRemoveCircle } from 'react-icons/md'\nimport { TabInterface } from '../../interfaces';\n\ninterface TabComponentInterface {\n    tab: TabInterface,\n    selected: boolean,\n    selectTab: () => void,\n    removeTab: () => void,\n    updateTabName: (name: string ) => void,\n}\n\nconst Tab:FC<TabComponentInterface> = (props) => {\n\n    const updateTabName = (e: FocusEvent<HTMLDivElement>) => {\n        if (e.target.blur) e.target.blur(); \n        const name = e.target.textContent\n        if (name) props.updateTabName(name)}\n    \n    const {id: tabID, name: tabName} = props.tab\n\n    return (\n        <div\n                key={tabID}\n                className={props.selected ? \"active plotTab\" : \"plotTab\"}\n                onClick={props.selected ? undefined : props.selectTab}>\n            <div\n                id={tabID}\n                contentEditable={props.selected}\n                \n                onBlur={updateTabName}\n                //onKeyUp={(e) => {if (e.keyCode === 13) updateTabName(e)}}\n                >{tabName}</div>\n            {props.selected ? <div className=\"removeTabBut\" onClick={props.removeTab}><MdRemoveCircle size={20}/></div> : null}\n        </div>\n    )\n}\n\nexport default Tab;","import { Component } from 'react'\nimport Tab from './Tab'\nimport { setActiveTab } from '../../redux/actions'\nimport PythonApi from '../../apis/PythonApi'\nimport { connect } from 'react-redux'\n\nimport _ from \"lodash\"\nimport { GlobalHotKeys } from 'react-hotkeys'\nimport { TABS_HOT_KEYS } from '../../utils/hotkeys'\n\nexport class Tabs extends Component {\n\n    hotKeysHandlers = {\n        MOVE_TO_NEXT_TAB: () => this.moveThroughTabs(\"right\"),\n        MOVE_TO_PREVIOUS_TAB: () => this.moveThroughTabs(\"left\"),\n        NEW_TAB: () => this.newTab(),\n        TRY: () => console.warn(\"YES\")\n    }\n    \n    moveThroughTabs = (direction) => {\n\n        const tabs = this.props.tabs\n        const i = _.findIndex(tabs, [\"id\", this.props.active.tab])\n\n        var newI;\n        if (direction === \"left\"){\n            newI = i !== 0 ? i-1 : tabs.length -1\n        } else if (direction === \"right\"){\n            newI = i !== tabs.length - 1 ? i+1 : 0 \n        }\n\n        this.props.setActiveTab(tabs[newI].id)\n    }\n\n    updateTabs = (tabs) => {\n        document.dispatchEvent(new CustomEvent(\"updateTabs\", {detail: {tabs: tabs}}))\n    }\n\n    newTab = () => {\n\n        PythonApi.addTab()\n        \n    }\n\n    noTabsMessage = () => {\n        return <div style={{paddingLeft: 20}}>\n            <span style={{color: \"darkred\"}}>You don't seem to have any tab. </span>\n        </div>\n    }\n\n    render() {\n\n        const tabs = this.props.tabs || []\n        const TabComponent = this.props.tabComponent || Tab\n        const NewTabComponent = this.props.newTabComponent || ((props) => null)\n        const noTabsComponent = this.props.noTabsComponent || this.noTabsMessage()\n\n        return (\n            <div style={{display: \"flex\", flexWrap: \"wrap\", alignItems:\"center\", ...this.props.style}}>\n                <GlobalHotKeys keyMap={TABS_HOT_KEYS.global} handlers={this.hotKeysHandlers}/>\n                {tabs.length === 0 ? \n                    noTabsComponent\n                    :\n                    tabs.map( \n                        tab => <TabComponent \n                            tab={tab} \n                            selected={this.props.active.tab === tab.id}\n                            selectTab={() => this.props.setActiveTab(tab.id)}\n                            removeTab={() => PythonApi.removeTab(tab.id)}\n                            updateTabName={(name) => PythonApi.updateTab(tab.id, {name: name})}\n                        />\n                    )\n                }\n                <NewTabComponent onClick={this.newTab}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.session.tabs,\n    active: state.active\n})\n\nconst mapDispatchToProps = {\n    setActiveTab\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabs);\n","import { useContext, useRef, useState } from 'react'\n\nimport _ from \"lodash\"\n\n//--Components\nimport PlotDashboard from '../components/plots/PlotDashboard';\n\n//--Python api \nimport PythonApi from '../apis/PythonApi'\n\n//--Redux\nimport { connect } from 'react-redux'\nimport { setActivePlot, setActivePage} from \"../redux/actions\"\nimport PlotInitializer from '../components/plotInitializer/PlotInitializer'\nimport PlotTweaking from './PlotTweaking'\n\nimport { Button, IconButton, TextField, Toolbar} from '@material-ui/core';\n\nimport {getApplicationKeyMap, GlobalHotKeys, configure} from 'react-hotkeys'\nimport PlotMethods from './PlotMethods';\nimport PlotEditor from './PlotEditor';\nimport { GLOBAL_HOT_KEYS } from '../utils/hotkeys';\nimport Tabs from '../components/tabs/Tabs';\nimport { MdRemoveCircle, MdAddCircle } from 'react-icons/md';\nimport StructurePickerProvider, { PickerSelectedContext } from '../components/structures/pickerContext';\n\nconfigure({logLevel: \"debug\", simulateMissingKeyPressEvents: false})\n\nconst Tab = (props) => {\n    const [editable, setEditable] = useState(false)\n\n    if (editable && !props.selected) setEditable(false)\n\n    const updateTabName = (e) => {\n        if (e.key === 'Enter') {\n            props.updateTabName(e.target.value);\n            setEditable(false)\n        }\n    }\n\n    const {name: tabName} = props.tab\n\n    if (editable) {\n        return <TextField label=\"Tab name\" defaultValue={tabName} onKeyPress={updateTabName}/>\n    } else {\n        return <Button \n            color=\"inherit\"\n            style={{backgroundColor: props.selected ? \"whitesmoke\" : undefined, marginRight: 10}}\n            onClick={props.selected ? undefined : props.selectTab}\n            onDoubleClick={() => setEditable(true)}\n            endIcon={props.selected ? <MdRemoveCircle className=\"removeTabBut\" onClick={props.removeTab}/> : undefined}\n            >{tabName}</Button>\n    }\n}\n\nconst NewTabButton = (props) => {\n    return <IconButton color=\"inherit\" aria-label=\"add new tab\" component=\"span\" onClick={props.onClick}>\n        <MdAddCircle color=\"green\" className='newTabIcon'/>\n    </IconButton>\n}\n\nconst Plots = (props) => {\n    const {pickerSelected} = useContext(PickerSelectedContext)\n\n    const nSelected = Object.keys(pickerSelected).reduce((n, k) => n + pickerSelected[k].length, 0)\n    const selectedRef = useRef(nSelected)\n\n    // Selected objects have changed, toggle the plot initializer\n    if (selectedRef.current !== nSelected) {\n        console.warn(nSelected, props.active.page)\n        if (nSelected === 0 && props.active.page === \"plotInitializer\") {\n            props.setActivePage(\"plots\")\n        } else if (nSelected > 0 && props.active.page !== \"plotInitializer\") {\n            props.setActivePage(\"plotInitializer\")\n        }\n        selectedRef.current = nSelected\n    }\n\n    const activeTab = _.find(props.tabs, [\"id\", props.active.tab])\n    if (activeTab){\n        //Get the missing plots if there are any\n        activeTab.plots.forEach(plotID => {\n\n            if (!props.plots[plotID]) {\n\n                PythonApi.getPlot(plotID)\n\n            }\n        })\n    }\n\n    const hotKeysHandlers = {\n        GO_TO_DASHBOARD: () => props.setActivePage(\"plots\"),\n        SHOW_AVAIL_HOTKEYS: () => console.warn(getApplicationKeyMap())\n    }\n\n    if (!props.active.plot && ![\"plotInitializer\", \"plots\"].includes(props.active.page)) {\n        props.setActivePage(\"plots\")\n    }\n\n    const MainComponent = {\n        'plots': PlotDashboard,\n        'plotLayoutEditor': PlotEditor,\n        'plotTweaking': PlotTweaking,\n        'plotMethods': PlotMethods,\n        'plotInitializer': PlotInitializer,\n    }[props.active.page]\n\n    return (\n        <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n            <GlobalHotKeys keyMap={{ ...GLOBAL_HOT_KEYS }} handlers={hotKeysHandlers} />\n            <Toolbar style={{ backgroundColor: \"#cccccc\" }}>\n                {[\"plots\"].includes(props.active.page) ? null :\n                    <Button color=\"inherit\" onClick={() => props.setActivePage(\"plots\")}>BACK TO DASHBOARD</Button>\n                }\n                {props.active.page === \"plots\" ? <Tabs tabComponent={Tab} newTabComponent={NewTabButton} /> : null}\n            </Toolbar>\n            <MainComponent\n                style={{ flex: 1 }}\n                session={props.session}\n                goto={props.setActivePage}\n            />\n        </div>\n    )\n\n}\n\nconst PlotsWithProvider = (props) => {\n    return <StructurePickerProvider>\n        <Plots {...props}/>\n    </StructurePickerProvider>\n}\n\nconst mapStateToProps = state => ({\n    plots: state.plots,\n    tabs: state.session.tabs,\n    active: state.active,\n    session: state.session\n})\n\nconst mapDispatchToProps = {\n    setActivePlot,\n    setActivePage\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlotsWithProvider);","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nconst SislDocs = props => {\n    const { height } = useWindowDimensions();\n\n    return <iframe \n        src={\"https://zerothi.github.io/sisl/\"} title=\"Sisl documentation\" aria-label=\"Sisl documentation\" \n        style={{height: height - 20, width: \"99%\"}}/>\n\n}\n\nexport default SislDocs;","import React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from 'react-three-fiber'\n\nfunction Box(props) {\n    // This reference will give us direct access to the mesh\n    const mesh = useRef()\n\n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    const [active, setActive] = useState(false)\n\n    // Rotate mesh every frame, this is outside of React without overhead\n    useFrame(() => {\n        mesh.current.rotation.x = mesh.current.rotation.y += 0.01\n    })\n\n    return (\n        <mesh\n            {...props}\n            ref={mesh}\n            scale={active ? [1.5, 1.5, 1.5] : [1, 1, 1]}\n            onClick={(e) => setActive(!active)}\n            onPointerOver={(e) => setHover(true)}\n            onPointerOut={(e) => setHover(false)}>\n            <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1]} />\n            <meshStandardMaterial attach=\"material\" color={hovered ? 'hotpink' : 'orange'} />\n        </mesh>\n    )\n}\n\nexport default function NotConnected(props){\n\n    return <Canvas style={props.style} {...props}>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        <Box position={[-1.2, 0, 0]} sign={-1}/>\n        <Box position={[1.2, 0, 0]} />\n    </Canvas>\n}","import { FC, useState } from 'react'\nimport PythonApi from \"../apis/PythonApi\"\n\n//--Components\nimport ReactTooltip from \"react-tooltip\"\nimport SettingsContainer from \"../components/settings/SettingsContainer\"\n\n//--Redux\nimport { connect } from 'react-redux'\n\nimport _ from \"lodash\"\nimport { SessionInterface } from '../interfaces'\nimport { Button, Toolbar } from '@material-ui/core'\nimport FilesInput from '../components/settings/inputFields/Files'\nimport NotConnected from '../components/loading/NotConnected'\nimport Methods from '../components/pythonMethods/Methods'\n\ninterface SessionSettingsProps {\n    session: SessionInterface,\n    style: {[key: string]: any},\n}\n\nconst saveCurrentSession = (currentSession: SessionInterface) => {\n    const path = prompt(\"Please provide the path to save the session.\\n\\nRoot directory:\\n\" + currentSession.settings.root_dir)\n    if (!path) return \n\n    PythonApi.saveSession(path)\n}\n\nconst loadSession = (acceptedFiles: File[]) => {\n    const sessionFile = acceptedFiles[0]\n    PythonApi.loadSessionFromFile(sessionFile)\n}\n\nconst downloadSession = () => {\n    PythonApi.getSessionFile((file:ArrayBuffer) => {\n        var blob = new Blob([file]);\n        const url = window.URL.createObjectURL(blob);\n\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute(\n        'download',\n        `newSession.session`,\n        );\n\n        link.click();\n    })\n}\n\nconst SessionSettings:FC<SessionSettingsProps> = props => {\n    const [connected, setConnected] = useState(PythonApi && PythonApi.socket ? PythonApi.socket.connected : false)\n    const [tabKey, setTabKey] = useState(\"settings\")\n\n    PythonApi.onConnect(() => {\n        setConnected(true)\n    })\n\n    if (!connected) {\n        return <div style={{...props.style, height:\"100%\", display:\"flex\", flexDirection: \"column\"}}>\n            <div style={{ paddingTop: 100 }}>\n                <div style={{ fontSize: \"2.5em\", fontWeight: \"bold\"}}>We are trying to connect to the sisl API.</div>\n            </div>\n            <NotConnected style={{flex: 1}} camera={{ position: [0, 0, 5] }}/>\n            <div style={{ paddingBottom: 100, fontSize: \"1.2em\" }}> Meanwhile you can have fun with these two moving cubes. </div>\n        </div>\n    }\n\n    if ( _.isEmpty(props.session) ) return null\n\n    var component = null\n    if (tabKey === \"settings\") {\n        component = <div style={{padding: 20, flex: 1}} className=\"scrollView\">\n            <SettingsContainer\n                className={`SISL_SETTING_SESSION SISL_SETTING_SESSIONCLASS_${props.session.sessionClass}`}\n                settings={props.session.settings}\n                params={props.session.params}\n                paramGroups={props.session.paramGroups}\n                submitSettings={PythonApi.updateSessionSettings}\n                undoSettings={PythonApi.undoSessionSettings}/>\n        </div>\n    } else if (tabKey === \"methods\") {\n        component = <div style={{padding: 20, flex: 1}} className=\"scrollView\">\n            <Methods \n                shortcuts={props.session.shortcuts}\n                applyMethod={(key:string) => PythonApi.callSessionShortcut(key)}/>\n        </div>\n    }\n\n    return (\n        <div style={{...props.style, height: \"100%\", display: \"flex\", flexDirection: \"column\"}}>\n            <Toolbar style={{backgroundColor: \"#cccccc\", justifyContent: \"space-between\"}}>\n                <div>\n                    <Button \n                        color=\"inherit\"\n                        style={{backgroundColor: tabKey === \"settings\" ? \"whitesmoke\" : undefined, marginRight: 10}} \n                        onClick={() => setTabKey(\"settings\")}>SETTINGS</Button>\n                    <Button \n                        color=\"inherit\"\n                        style={{backgroundColor: tabKey === \"methods\" ? \"whitesmoke\" : undefined}}\n                        onClick={() => setTabKey(\"methods\")}>METHODS</Button>\n                </div>\n                <div>\n                    <Button color=\"inherit\" data-tip=\"Download current session as a file\" onClick={downloadSession}>DOWNLOAD</Button>\n                    <Button color=\"inherit\" data-tip=\"Save current session\" onClick={() => saveCurrentSession(props.session)}>SAVE</Button>\n                    <Button color=\"inherit\" \n                        // data-tip=\"Load a saved session. You can drop a file here or click to browse your computer\"\n                    >\n                        <FilesInput placeholder=\"LOAD\" onChange={loadSession}/>\n                    </Button>\n                </div>\n            </Toolbar>\n            {component}\n            <ReactTooltip multiline effect=\"solid\" disable={props.session.settings ? !props.session.settings.showTooltips : false}/>\n        </div>\n        \n    )\n}\n\nconst mapStateToProps = (state: {[key: string]: any}) => ({\n    session: state.session\n})\n\nexport default connect(mapStateToProps)(SessionSettings);\n\n\n","import React, { Component } from 'react'\nimport PythonApi from '../../apis/PythonApi'\nimport { FiWifi, FiWifiOff } from 'react-icons/fi'\n\nexport default class ConnectionStatus extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = { connected: PythonApi.socket.connected }\n    }\n\n    componentDidMount() {\n        PythonApi.onConnect(() => this.setState({connected: true}))\n        PythonApi.onDisconnect(() => this.setState({ connected: false }))\n    }\n\n    render() {\n\n        const style = this.state.connected ? { backgroundColor: \"lightgreen\" } : { backgroundColor: \"salmon\" }\n\n        const addStyles = this.state.connected ? this.props.connectedStyle : this.props.disconnectedStyle\n\n        return <div {...this.props} style={{...style, ...this.props.style, ...addStyles}}\n                data-tip={this.state.connected ? `Connected to ${PythonApi.apiAddress}` : \"Currently not connected\"} \n                data-place=\"left\"\n                data-background-color={style.backgroundColor}>\n            {this.state.connected ? <FiWifi color=\"green\" size={20} /> : <FiWifiOff color=\"darkred\" size={20}/>}\n        </div>\n\n    }\n}\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport Plots from './Plots';\nimport SislDocs from './SislDocs';\nimport Settings from './Session';\nimport ConnectionStatus from '../components/controls/ConnectionStatus';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{flex: 1, height: \"100%\"}}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{width: \"100%\", height: \"100%\"}}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function MainPage() {\n  const [value, setValue] = React.useState(1);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box\n    sx={{ flexGrow: 1, display: 'flex', height: \"100vh\"}}>\n    <Box sx={{bgcolor:\"background.paper\"}}>\n        <ConnectionStatus\n            connectedStyle={{ backgroundColor: \"lightgreen\", display: \"none\" }}\n            style={{padding: 10}}/>\n        <Tabs\n        orientation=\"vertical\"\n        variant=\"scrollable\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Main app tabs\"\n        sx={{ borderRight: 1, borderColor: 'divider'}}\n        >\n            <Tab label=\"Session\" {...a11yProps(0)} />\n            <Tab label=\"Plotting\" {...a11yProps(1)} />\n            <Tab label=\"Sisl docs\" {...a11yProps(2)} />\n        </Tabs>\n    </Box>\n    <TabPanel value={value} index={0}>\n    <Settings/>\n    </TabPanel>\n    <TabPanel value={value} index={1}>\n    <Plots/>\n    </TabPanel>\n    <TabPanel value={value} index={2}>\n    <SislDocs/>\n    </TabPanel>\n    <ToastContainer/>\n    </Box>\n  );\n}","import { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PythonApi from '../apis/PythonApi'\nimport { addPlots, setCurrentSession } from \"../redux/actions\"\n\nclass Syncronizer extends Component {\n\n    constructor(props){\n        super(props)\n\n        document.addEventListener(\"syncWithSession\", (e) => this.syncWithSession(e.detail.session) )\n\n        document.addEventListener(\"updateTabs\", () => this.syncWithSession())\n\n        // document.addEventListener(\"loadingPlot\", (e) => {\n        //     this.setState({ loadingPlots: [...this.state.loadingPlots, e.detail.plot_id] })\n        // })\n\n        document.addEventListener(\"plot\", (e) => {\n            const plot = e.detail.plot\n            props.addPlots({ [plot.id]: plot })\n            // this.setState({ loadingPlots: this.state.loadingPlots.filter(id => id !== plot.id) })\n        })\n\n        document.addEventListener(\"newPlot\", () => this.syncWithSession())\n\n        document.addEventListener(\"sessionUpdate\", (e) => {\n            e.detail.justUpdated.forEach( plotID => {\n                \n                PythonApi.getPlot(plotID)\n\n            })\n\n        })\n            \n    }\n\n    syncWithSession = (session) => {\n\n        if (!session) {\n            return PythonApi.askForSession()\n        }\n        \n        this.props.setCurrentSession(session)\n        \n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapDispatchToProps = {\n    setCurrentSession,\n    addPlots,\n}\n\nexport default connect(null, mapDispatchToProps)(Syncronizer);\n","import React from 'react';\nimport './App.css';\nimport \"./styles/main.scss\";\n\n\n//--Redux\nimport getStoreAndPersistor from './redux/store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport MainPage from './pages/MainPage';\nimport Syncronizer from './pages/Syncronizer';\n\nconst {store, persistor} = getStoreAndPersistor()\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Syncronizer/>\n        <div className=\"App\" style={{display: \"flex\", flexDirection: \"column\"}}>\n          <div className = \"appContent\" style={{height: \"100vh\"}}>\n            <MainPage/>\n          </div>   \n        </div>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}